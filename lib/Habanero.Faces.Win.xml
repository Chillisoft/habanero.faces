<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Habanero.Faces.Win</name>
    </assembly>
    <members>
        <member name="T:Habanero.Faces.Win.UserControlWin">
            <summary>
            Provides an empty control that can be used to create other controls
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.UserControlWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.UserControlWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.UserControlWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.StaticDataEditorWin">
            <summary>
            Provides an editor for static data in an application.  Static data serves
            a number purposes including providing source data for lookup lists used in
            drop-downs.
            <br/>
            The editor typically consists of a TreeView on the left and an EditableGrid
            on the right, where data for the selected type in the TreeView can be edited.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.PanelWin">
            <summary>
            Used to group collections of controls
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.PanelWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.PanelWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.PanelWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.StaticDataEditorWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.AddSection(System.String)">
            <summary>
            Adds a section to the treeview, under which individual items
            can be listed
            </summary>
            <param name="sectionName">The name of the section as it appears to the user</param>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.AddItem(System.String,Habanero.Base.IClassDef)">
            <summary>
            Adds an item to the treeview
            </summary>
            <param name="itemName">The name of the item as it appears to the user</param>
            <param name="classDef">The class definition holding a grid def used to
            construct the grid for that type</param>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.SelectItem(System.String)">
            <summary>
            Selects an item with the given name in the treeview
            </summary>
            <param name="itemName">The name of the item to select</param>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.SaveChanges">
            <summary>
            Saves the changes made to the grid
            </summary>
            <returns>Returns true if saved successfully</returns>
        </member>
        <member name="M:Habanero.Faces.Win.StaticDataEditorWin.RejectChanges">
            <summary>
            Rejects (restores) changes to the grid since the last save
            </summary>
            <returns>Returns true if restored successfully</returns>
        </member>
        <member name="T:Habanero.Faces.Win.TabPageWin">
            <summary>
            Represents a single tab page in a TabControl
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TabPageWin.#ctor">
            <summary>
            Constructor for <see cref="T:Habanero.Faces.Win.TabPageWin"/>
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabPageWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.TabPageWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabPageWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ErrorProviderWin">
            <summary>
            Provides a user interface for indicating that a control on a form has an error associated with it
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.GetError(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Returns the current error description string for the specified control.
            </summary>
            <returns>The error description string for the specified control.</returns>
            <param name="objControl">The item to get the error description string for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.GetIconAlignment(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Gets a value indicating where the error icon should be placed in relation to the control.
            </summary>
            <returns>One of the <see cref="T:Habanero.Faces.Base.ErrorIconAlignmentHabanero"></see> values. The default icon alignment is <see cref="F:Habanero.Faces.Base.ErrorIconAlignmentHabanero.MiddleRight"></see>.</returns>
            <param name="objControl">The control to get the icon location for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.GetIconPadding(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Returns the amount of extra space to leave next to the error icon.
            </summary>
            <returns>The number of pixels to leave between the icon and the control. </returns>
            <param name="objControl">The control to get the padding for. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.SetError(Habanero.Faces.Base.IControlHabanero,System.String)">
            <summary>
            Sets the error description string for the specified control.
            </summary>
            <param name="objControl">The control to set the error description string for. </param>
            <param name="strValue">The error description string. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.SetIconAlignment(Habanero.Faces.Base.IControlHabanero,Habanero.Faces.Base.ErrorIconAlignmentHabanero)">
            <summary>
            Sets the location where the error icon should be placed in relation to the control.
            </summary>
            <param name="objControl">The control to set the icon location for. </param>
            <param name="enmValue">One of the <see cref="T:Habanero.Faces.Base.ErrorIconAlignmentHabanero"/> values. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorProviderWin.SetIconPadding(Habanero.Faces.Base.IControlHabanero,System.Int32)">
            <summary>
            Sets the amount of extra space to leave between the specified control and the error icon.
            </summary>
            <param name="objControl">The control to set the padding for. </param>
            <param name="intPadding">The number of pixels to add between the icon and the control. </param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Habanero.Faces.Win.ErrorProviderWin.BlinkStyleHabanero">
            <summary>
            Gets or sets a value indicating when the error icon flashes.
            </summary>
            <returns>One of the <see cref="T:Habanero.Faces.Base.ErrorBlinkStyleHabanero"/> values. The default is <see cref="F:Habanero.Faces.Base.ErrorBlinkStyleHabanero.BlinkIfDifferentError"/>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:Habanero.Faces.Base.ErrorBlinkStyleHabanero"/> values. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="T:Habanero.Faces.Win.ControlCollectionWin">
            <summary>
            Represents a collection of controls
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.#ctor(System.Windows.Forms.Control.ControlCollection)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ControlCollectionWin"/>
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.Add(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Adds a control to the collection
            </summary>
            <param name="value">The control to add</param>
            <returns>Returns the position at which the control was added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.IndexOf(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Provides the index position of the control specified
            </summary>
            <param name="value">The control to search for</param>
            <returns>Returns the index position if found, or -1</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.Insert(System.Int32,Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Insert a control at a specified index position
            </summary>
            <param name="index">The index position at which to insert</param>
            <param name="value">The control to insert</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.Remove(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Removes the specified control from the collection
            </summary>
            <param name="value">The control to remove</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.Contains(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Indicates whether the collection contains the specified control
            </summary>
            <param name="value">The control to search for</param>
            <returns>Returns a boolean indicating whether that control is 
            found in the collection</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.Clear">
            <summary>
            Removes all controls from the collection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.ControlCollectionWin.Item(System.Int32)">
            <summary>
            Indicates the Control at the specified indexed location in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ControlCollectionWin.Count">
            <summary>
            Gets the number of controls in the collection
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.NullWizardStepWin">
            <summary>
            An implementation of WizardStep that does nothing and is drawn as a blank panel.
            Can be used as a placeholder step in a Wizard that changes depending on selections made
            by users.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.WizardStepWin">
            <summary>
            A basic implementation of WizardStep that can be used for simply displaying a message.  
            Should a step be required that is a simple message for the user (such as at the end of a wizard), this step can be used
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.#ctor">
            <summary>
            Constructs the MessageWizardStep
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.InitialiseStep">
            <summary>
            Initialises the step. Run when the step is reached.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.CanMoveOn(System.String@)">
            <summary>
            Always returns true as this wizard step is simply for displaying a message to a user.
            </summary>
            <param name="message">Out parameter that will always be the empty string</param>
            <returns>true</returns>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.CanMoveBack">
            <summary>
            Verifies whether the user can move back from this step.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.MoveOn">
            <summary>
            Does any actions involved in this wizard step when you move on
            to the next wizard step. E.g. Updates any Objects from 
            User interface controls.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.UndoMoveOn">
            <summary>
            Undoes any actions that have been done by this wizard step.
            Usually you would want this to do nothing since if the 
            user does a previous and then next they would not expect to 
            lose their. But in some cases you may have created objects based on
            the selection in this step and when you move back to this step you want to
            these so that if the user changes his/her selection then new objects or different
            objects are created.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.CancelStep">
            <summary>
            Provides an interface for the developer to implement functionality to cancel all edits made as part of this
            wizard step. The default wizard controller functionality is to call all wizard steps cancelStep methods when
            its Cancel method is called on the Wizard Controller (i.e. typically when Cancel Button is selected.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.CanFinish">
            <summary>
            Can the user select finish from this wizard step. I.e. is sufficient information captured 
            so that all information gathered in future steps can be set to defaults.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.CanCancel">
            <summary>
            Can the user cancel from this wizard step. I.e. the objects under the control of this
            step have not been moved into a state that prohibits cancelling all changes.
            It is very rare that you would not be able to cancel at any point in a wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Habanero.Faces.Win.WizardStepWin.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardStepWin.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardStepWin.HeaderText">
            <summary>
            The text that you want displayed at the top of the wizard control when this step is active.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NullWizardStepWin.#ctor">
            <summary>
            Constructs the NullWizardStep
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ContextMenuBuilderWin">
            <summary>
             
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ContextMenuBuilderWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.MenuBuilderWin"/> with the appropriate controlFactory
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ContextMenuBuilderWin.BuildMainMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
             Builds the Context Menu based on a <paramref name="habaneroMenu"/>
            </summary>
            <param name="habaneroMenu"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.Faces.Win.ContextMenuBuilderWin.ControlFactory">
            <summary>
            Returns the control factory being used to create the Menu and the MenuItems
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MenuBuilderWin">
            <summary>
             
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MenuBuilderWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.MenuBuilderWin"/> with the appropriate controlFactory
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.MenuBuilderWin.BuildMainMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
             Builds the Main Menu based on a <paramref name="habaneroMenu"/>
            </summary>
            <param name="habaneroMenu"></param>
            <returns></returns>
        </member>
        <member name="P:Habanero.Faces.Win.MenuBuilderWin.ControlFactory">
            <summary>
            Returns the control factory being used to create the Menu and the MenuItems
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ContextMenuWin">
            <summary>
             The standard windows Context Menu structure object. <see cref="T:System.Windows.Forms.MainMenu"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ContextMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            This method sets up the form so that the menu is displayed and the form is able to 
            display the controls loaded when the menu item is clicked.
            </summary>
            <param name="form">The form to set up with the menu</param>
        </member>
        <member name="M:Habanero.Faces.Win.ContextMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero,System.Int32)">
            <summary>
            Not implemented as it is not supported to set a width for
            this style of menu.
            </summary>
            <param name="form"></param>
            <param name="menuWidth"></param>
        </member>
        <member name="P:Habanero.Faces.Win.ContextMenuWin.MenuItems">
            <summary>
             The collection of menu items for this menu <see cref="T:System.Windows.Forms.Menu.MenuItemCollection"/>
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MainMenuWin">
            <summary>
             The standard windows main menu structure object. <see cref="T:System.Windows.Forms.MainMenu"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            This method sets up the form so that the menu is displayed and the form is able to 
            display the controls loaded when the menu item is clicked.
            </summary>
            <param name="form">The form to set up with the menu</param>
        </member>
        <member name="M:Habanero.Faces.Win.MainMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero,System.Int32)">
            <summary>
            Not implemented as it is not supported to set a width for
            this style of menu.
            </summary>
            <param name="form"></param>
            <param name="menuWidth"></param>
        </member>
        <member name="P:Habanero.Faces.Win.MainMenuWin.MenuItems">
            <summary>
             The collection of menu items for this menu <see cref="T:System.Windows.Forms.Menu.MenuItemCollection"/>
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MenuItemCollectionWin">
            <summary>
            A menuItems Collection representing the <see cref="T:System.Windows.Forms.Menu.MenuItemCollection"/>
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.EditableGridButtonsControlWin">
            <summary>
            Provides a set of buttons for use on an <see cref="T:Habanero.Faces.Base.IEditableGridControl"/>.
            By default, Save and Cancel buttons are available.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ButtonGroupControlWin">
            <summary>
            Manages a group of buttons that display next to each other
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonGroupControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructor for the <see cref="T:Habanero.Faces.Win.ButtonGroupControlWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonGroupControlWin.AddButton(System.String)">
            <summary>
            Adds a new button to the control with a specified name
            </summary>
            <param name="buttonName">The name to appear on the button</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonGroupControlWin.SetDefaultButton(System.String)">
            <summary>
            Sets the default button in this control that would be chosen
            if the user pressed Enter without changing the focus
            </summary>
            <param name="buttonName">The name of the button</param>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonGroupControlWin.AddButton(System.String,System.EventHandler)">
            <summary>
            Adds a new button to the control with a specified name and
            with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="buttonName">The name to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonGroupControlWin.AddButton(System.String,System.String,System.EventHandler)">
            <summary>
            Adds a new button to the control with a specified name, specified text and
            with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="buttonName">The name that the button is created with</param>
            <param name="buttonText">The text to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
            <returns>Returns the Button object created</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonGroupControlWin.Item(System.String)">
            <summary>
            A facility to index the buttons in the control so that they can
            be accessed like an array (eg. button["name"])
            </summary>
            <param name="buttonName">The name of the button</param>
            <returns>Returns the button found by that name, or null if not
            found</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonGroupControlWin.ButtonSizePolicy">
            <summary>
            The <see cref="T:Habanero.Faces.Base.IButtonSizePolicy"/> to use when resizing the buttons. The default on will size all the buttons equally based on the widest one.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonGroupControlWin.LayoutManager">
            <summary>
            Returns the <see cref="T:Habanero.Faces.Base.FlowLayoutManager"/> used to layout the buttons. You can use this, for example, to adjust the alignment of the buttons (left or right).
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridButtonsControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.EditableGridButtonsControlWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="E:Habanero.Faces.Win.EditableGridButtonsControlWin.SaveClicked">
            <summary>
            Fires when the Save button is clicked
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.EditableGridButtonsControlWin.CancelClicked">
            <summary>
            Fires when the Cancel button is clicked
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin">
            <summary>
            Displays data in a customizable grid
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.#ctor">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.DataGridViewWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.Sort(Habanero.Faces.Base.IDataGridViewColumn,System.ComponentModel.ListSortDirection)">
            <summary>Sorts the contents of the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control in ascending or
            descending order based on the contents of the specified column.</summary>
            <param name="direction">One of the <see cref="T:System.ComponentModel.ListSortDirection"></see> values. </param>
            <param name="dataGridViewColumn">The column by which to sort the contents of the <see cref="T:Habanero.Faces.Base.IDataGridView"></see>. </param>
            <exception cref="T:System.ArgumentException">The specified column is not part of this <see cref="T:Habanero.Faces.Base.IDataGridView"></see>
            .-or-The DataSource property has been set and the DataGridViewColumn.IsDataBound property of the specified
            column returns false.</exception>
            <exception cref="T:System.ArgumentNullException">dataGridViewColumn is null.</exception>
            <exception cref="T:System.InvalidOperationException">The VirtualMode property is set to true
            and the DataGridViewColumn.IsDataBound property of the specified column returns false.-or-
            The object specified by the DataSource property does not implement the
            <see cref="T:System.ComponentModel.IBindingList"></see> interface.-or-
            The object specified by the DataSource property has a
            <see cref="P:System.ComponentModel.IBindingList.SupportsSorting"></see> property value of false.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.Sort(System.String,System.Boolean)">
            <summary>
            Sets the sort column and indicates whether
            it should be sorted in ascending or descending order
            </summary>
            <param name="columnName">The column number to sort on object property</param>
            <param name="ascending">True for ascending order, false for descending order</param>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.ChangeToPageOfRow(System.Int32)">
            <summary>
            When pagination is used, changes the current page to the one containing
            the given row number.  implements IDataGridView
            </summary>
            <param name="rowNum">The row that you wish to show the page of.  For example, if your grid has
            30 rows and is set to 20 rows per page, calling ChangeToPageOfRow with an argument
            of 25 will set the page to page 2 since row 25 is on page 2.</param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Columns">
            <summary>
            Gets a collection of columns set up for the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.CurrentCell">
            <summary>
            Gets or sets the currently selected cell
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.CurrentRow">
            <summary>
            Gets the currently selected row
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Rows">
            <summary>
            Gets the collection of rows in the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.SelectedRows">
            <summary>
            Gets the collection of currently selected rows
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.SelectedCells">
            <summary>
            Gets the collection of currently selected cells
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IDataGridView#SelectionMode">
            <summary>Gets or sets a value indicating how the cells of the DataGridView can be selected.</summary>
            <returns>One of the DataGridViewSelectionMode values. The default is DataGridViewSelectionMode.RowHeaderSelect.</returns>
            <exception cref="T:System.InvalidOperationException">The specified value when setting this property is DataGridViewSelectionMode.FullColumnSelect or DataGridViewSelectionMode.ColumnHeaderSelect and the DataGridViewColumn.SortMode property of one or more columns is set to DataGridViewColumnSortMode.Automatic.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid DataGridViewSelectionMode value.</exception>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Item(System.Int32,System.Int32)">
            <summary>
            Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.
            </summary>
            <param name="columnIndex">The index of the column containing the cell.</param>
            <param name="rowIndex">The index of the row containing the cell</param>
            <returns>The DataGridViewCell at the specified location</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IDataGridView#SortedColumn">
            <summary>Gets the column by which the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> contents are currently sorted.</summary>
            <returns>The <see cref="T:Habanero.Faces.Base.IDataGridViewColumn"></see> by which the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> 
            contents are currently sorted.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.UseInternalPaging">
            <summary>
            Uses internal paging algorithem implements IDataGridView. implements IDataGridView
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IDataGridView#CurrentPage">
            <summary>
            Gets or sets the current page of the grid when the grid implements pagination. implements IDataGridView
            These are not implemented in the standard windows form DataGridView
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.Habanero#Faces#Base#IDataGridView#ItemsPerPage">
            <summary>
            Gets or sets the number of items per page used when the grid implements pagination. implements IDataGridView
            These are not implemented in the standard windows form DataGridView
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.TotalPages">
            <summary>
            Gets or sets the total pages. implements IDataGridView
            These are not implemented in the standard windows form DataGridView
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.TotalItems">
            <summary>
            Gets or sets the total items.
            </summary>
            <value></value>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin">
            <summary>
            A collection of DataGridViewRow objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.Add(System.Object[])">
            <summary>Adds a new row to the collection, and populates the cells with the specified objects.</summary>
            <returns>The index of the new row.</returns>
            <param name="values">A variable number of objects that populate the cells of the
             new <see cref="T:Habanero.Faces.Base.IDataGridViewRow"></see>.</param>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> 
            control is performing one of the following actions that temporarily prevents new rows from 
            being added:Selecting all cells in the control.Clearing the selection.-or-This method is 
            being called from a handler for one of the following <see cref="T:Habanero.Faces.Base.IDataGridView"></see>
             events: CellEnter, CellLeave, CellValidating, CellValidated, RowEnter, RowLeave, RowValidated,
            RowValidating, -or-The VirtualMode property of the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> is set to
             true.- or -The <see cref="P:Habanero.Faces.Base.IDataGridView.DataSource"></see> property of the
             <see cref="T:Habanero.Faces.Base.IDataGridView"></see> is not null.-or-The <see cref="T:Habanero.Faces.Base.IDataGridView"></see> has no
             columns. -or-The row returned by the RowTemplate property has more cells than there are columns 
            in the control.-or-This operation would add a frozen row after unfrozen rows.</exception>
            <exception cref="T:System.ArgumentNullException">values is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.Clear">
            <summary>Clears the collection. </summary>
            <exception cref="T:System.InvalidOperationException">The collection is data bound and the underlying data source does not support clearing the row data.-or-The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.Faces.Base.IDataGridView"></see> events:<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellValidating<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidating</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.Remove(Habanero.Faces.Base.IDataGridViewRow)">
            <summary>Removes the row from the collection.</summary>
            <param name="dataGridViewRow">The row to remove from the <see cref="T:Habanero.Faces.Base.IDataGridViewRowCollection"></see>.</param>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.Faces.Base.IDataGridView"></see> events:<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.Faces.Base.IDataGridView">.CellValidating</see><see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidating-or-dataGridViewRow is the row for new records.-or-The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control is bound to an <see cref="T:System.ComponentModel.IBindingList"></see> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove"></see> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification"></see> property values that are not both true. </exception>
            <exception cref="T:System.ArgumentException">dataGridViewRow is not contained in this collection.-or-dataGridViewRow is a shared row.</exception>
            <exception cref="T:System.ArgumentNullException">dataGridViewRow is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.RemoveAt(System.Int32)">
            <summary>Removes the row at the specified position from the collection.</summary>
            <param name="index">The position of the row to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero and greater than the number of rows in the collection minus one. </exception>
            <exception cref="T:System.InvalidOperationException">The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control is performing one of the following actions that temporarily prevents new rows from being added:Selecting all cells in the control.Clearing the selection.-or-This method is being called from a handler for one of the following <see cref="T:Habanero.Faces.Base.IDataGridView"></see> events:<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellLeave<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellValidating<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.CellValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowEnter<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowLeave<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidated<see cref="T:Habanero.Faces.Base.IDataGridView"></see>.RowValidating-or-index is equal to the number of rows in the collection and the <see cref="P:Habanero.Faces.Base.IDataGridView.AllowUserToAddRows"></see> property of the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> is set to true.-or-The associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control is bound to an <see cref="T:System.ComponentModel.IBindingList"></see> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove"></see> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification"></see> property values that are not both true.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.IndexOf(Habanero.Faces.Base.IDataGridViewRow)">
            <summary>
            Returns the index of a specified item in the collection
            </summary>
            <param name="dataGridViewRow">The DataGridViewRow to locate in the DataGridViewRowCollection</param>
            <returns>The index of value if it is a DataGridViewRow found in the DataGridViewRowCollection; otherwise, -1.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.Count">
            <summary>
            Gets the number of rows in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowCollectionWin.Item(System.Int32)">
            <summary>Gets the <see cref="T:Habanero.Faces.Base.IDataGridViewRow"></see> at the specified index.</summary>
            <returns>The <see cref="T:Habanero.Faces.Base.IDataGridViewRow"></see> at the specified index. Accessing
             a <see cref="T:Habanero.Faces.Base.IDataGridViewRow"></see> with this indexer causes the row to become unshared. 
            To keep the row shared, use the SharedRow method. 
            For more information, see Best Practices for Scaling the Windows Forms DataGridView Control.</returns>
            <param name="index">The zero-based index of the <see cref="T:Habanero.Faces.Base.IDataGridViewRow"></see> to get.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin">
            <summary>
            Represents a collection of DataGridViewColumn objects in a DataGridView control.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Add(Habanero.Faces.Base.IDataGridViewColumn)">
            <summary>
            Adds a column to the collection where the column has been
            wrapped using the IDataGridViewColumn pattern
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Add(System.String,System.String)">
            <summary>
            Adds a DataGridViewTextBoxColumn with the given column name and column header text to the collection
            </summary>
            <returns>The index of the column</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Contains(System.String)">
            <summary>Determines whether the collection contains the column referred to by the given name. </summary>
            <returns>true if the column is contained in the collection; otherwise, false.</returns>
            <param name="columnName">The name of the column to look for.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnName"/> is null.</exception>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.System#Collections#Generic#IEnumerable{Habanero#Faces#Base#IDataGridViewColumn}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Count">
            <summary>
            Gets the number of columns held in this collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Item(System.Int32)">
            <summary>
            Gets or sets the column at the given index in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewColumnCollectionWin.Item(System.String)">
            <summary>
            Gets or sets the column of the given name in the collection
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin">
            <summary>
            Represents a row in a DataGridView control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.#ctor(System.Windows.Forms.DataGridViewRow)">
            <summary>
            Constructor for a DataGridViewWin.
            </summary>
            <param name="dataGridViewRow"></param>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.SetValues(System.Object[])">
            <summary>Sets the values of the row's cells.</summary>
            <returns>true if all values have been set; otherwise, false.</returns>
            <param name="values">One or more objects that represent the cell values in the row.-or-An
             <see cref="T:System.Array"></see> of <see cref="T:System.Object"></see> values. </param>
            <exception cref="T:System.ArgumentNullException">values is null. </exception>
            <exception cref="T:System.InvalidOperationException">This method is called when the associated 
            <see cref="T:Habanero.Faces.Base.IDataGridView"></see> is operating in virtual mode. -or-This row is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.DataGridViewRow">
            <summary>
            Returns the DataGridViewRow.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Selected">
            <summary>Gets or sets a value indicating whether the row is selected. </summary>
            <returns>true if the row is selected; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.Faces.Base.IDataGridView"></see>
             control and is a shared row.</exception>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Index">
            <summary>
            Gets the relative position of the row within the DataGridView control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Displayed">
            <summary>Gets a value indicating whether this row is displayed on the screen.</summary>
            <returns>true if the row is currently displayed on the screen; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control and is a shared row.</exception>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Visible">
            <summary>Gets or sets a value indicating whether the row is visible. </summary>
            <returns>true if the row is visible; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.Faces.Base.IDataGridView"></see>
             control and is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Tag">
            <summary>Gets and sets a tag value for this <see cref="T:Habanero.Faces.Base.IDataGridViewRow"/></summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.Cells">
            <summary>Gets the collection of cells that populate the row.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.IDataGridViewCellCollection"></see> that contains all of the cells in the row.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.DataBoundItem">
            <summary>Gets the data-bound object that populated the row.</summary>
            <returns>The data-bound <see cref="T:System.Object"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewRowWin.ReadOnly">
            <summary>Gets or sets a value indicating whether the row is read-only.</summary>
            <returns>true if the row is read-only; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control and is a shared row.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin">
            <summary>
            Represents a collection of cells in a DataGridViewRow
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.Add(Habanero.Faces.Base.IDataGridViewCell)">
            <summary>Adds a cell to the collection.</summary>
            <returns>The position in which to insert the new element.</returns>
            <param name="dataGridViewCell">A <see cref="T:Habanero.Faces.Base.IDataGridViewCell"></see> to add to the collection.</param>
            <exception cref="T:System.InvalidOperationException">The row that owns this 
            <see cref="T:Habanero.Faces.Base.IDataGridViewCellCollection"></see> already belongs to a DataGridView control.-or-
            dataGridViewCell already belongs to a DataGridViewRow&gt;.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.Clear">
            <summary>Clears all cells from the collection.</summary>
            <exception cref="T:System.InvalidOperationException">The row that owns this 
            <see cref="T:Habanero.Faces.Base.IDataGridViewCellCollection"></see> already belongs to a DataGridView control.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.Contains(Habanero.Faces.Base.IDataGridViewCell)">
            <summary>Determines whether the specified cell is contained in the collection.</summary>
            <returns>true if dataGridViewCell is in the collection; otherwise, false.</returns>
            <param name="dataGridViewCell">A <see cref="T:Habanero.Faces.Base.IDataGridViewCell"></see> to locate in the collection.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.IndexOf(Habanero.Faces.Base.IDataGridViewCell)">
            <summary>Returns the index of the specified cell.</summary>
            <returns>The zero-based index of the value of dataGridViewCell parameter, if it is found in the collection; otherwise, -1.</returns>
            <param name="dataGridViewCell">The cell to locate in the collection.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.Item(System.Int32)">
            <summary>Gets or sets the cell at the provided index location. In C#, this property is 
            the indexer for the <see cref="T:Habanero.Faces.Base.IDataGridViewCellCollection"></see> class.</summary>
            <returns>The <see cref="T:Habanero.Faces.Base.IDataGridViewCell"></see> stored at the given index.</returns>
            <param name="index">The zero-based index of the cell to get or set.</param>
            <exception cref="T:System.InvalidOperationException">The specified cell when setting this 
            property already belongs to a DataGridView control.-or-The specified cell when setting this 
            property already belongs to a DataGridViewRow.</exception>
            <exception cref="T:System.ArgumentNullException">The specified value when setting this property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewCellCollectionWin.Item(System.String)">
            <summary>Gets or sets the cell in the column with the provided name. In C#, this property is 
            the indexer for the <see cref="T:Habanero.Faces.Base.IDataGridViewCellCollection"></see> class.</summary>
            <returns>The <see cref="T:Habanero.Faces.Base.IDataGridViewCell"></see> stored in the column with the given name.</returns>
            <param name="columnName">The name of the column in which to get or set the cell.</param>
            <exception cref="T:System.InvalidOperationException">The specified cell when setting this 
            property already belongs to a DataGridView control.-or-The specified cell when setting this 
            property already belongs to a DataGridViewRow".</exception>
            <exception cref="T:System.ArgumentException">columnName does not match the name of any columns in the control.</exception>
            <exception cref="T:System.ArgumentNullException">The specified value when setting this property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedRowCollectionWin">
            <summary>
            Represents a collection of DataGridViewRow objects that are selected in a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedRowCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedRowCollectionWin.Count">
            <summary>
            Gets the total number of rows in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedRowCollectionWin.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedCellCollectionWin">
            <summary>
            Represents a collection of cells that are selected in a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedCellCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedCellCollectionWin.Count">
            <summary>
            Gets the total number of cells in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewWin.DataGridViewSelectedCellCollectionWin.Item(System.Int32)">
            <summary>
            Gets the cell at the specified index.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewCellStyleWin">
            <summary>
            Represents the formatting and style information applied to individual cells 
            within a DataGridView control.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewCellStyleWin.#ctor(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            </summary>
            <param name="dataGridViewCellStyle"></param>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewCellStyleWin.ApplyStyle(Habanero.Faces.Base.IDataGridViewCellStyle)">
            <summary>Applies the specified <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see> to the current 
            <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see>.</summary>
            <param name="dataGridViewCellStyle">The <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see> to apply 
            to the current <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see>.</param>
            <exception cref="T:System.ArgumentNullException">dataGridViewCellStyle is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewCellStyleWin.Clone">
            <summary>Creates an exact copy of this <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see>.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see> that represents an exact copy of this cell style.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellStyleWin.DataGridViewCellStyle">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellStyleWin.Format">
            <summary>Gets or sets the format string applied to the textual content of a <see cref="T:Habanero.Faces.Base.IDataGridView"></see> cell.</summary>
            <returns>A string that indicates the format of the cell value. The default is <see cref="F:System.String.Empty"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellStyleWin.FormatProvider">
            <summary>Gets or sets the object used to provide culture-specific formatting of <see cref="T:Habanero.Faces.Base.IDataGridView"></see> cell values.</summary>
            <returns>An <see cref="T:System.IFormatProvider"></see> used for cell formatting. The default is <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewCellWin">
            <summary>
            Represents an individual cell in a DataGridView control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewCellWin.#ctor(System.Windows.Forms.DataGridViewCell)">
            <summary>
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.DataGridViewCell">
            <summary>
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.ColumnIndex">
            <summary>Gets the column index for this cell. </summary>
            <returns>The index of the column that contains the cell; -1 if the cell is not contained within a column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.Displayed">
            <summary>Gets a value that indicates whether the cell is currently displayed on-screen. </summary>
            <returns>true if the cell is on-screen or partially on-screen; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.Frozen">
            <summary>Gets a value indicating whether the cell is frozen. </summary>
            <returns>true if the cell is frozen; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.FormattedValue">
            <summary>Gets the value of the cell as formatted for display.</summary>
            <returns>The formatted value of the cell or null if the cell does not belong to a <see cref="T:Habanero.Faces.Base.IDataGridView"></see> 
                control.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The row containing the cell is a shared row.
            -or-The cell is a column header cell.</exception>
            <exception cref="T:System.Exception">Formatting failed and either there is no handler for the 
            IDataGridView.DataError" event of the <see cref="T:Habanero.Faces.Base.IDataGridView"></see> control or the handler 
            set the DataGridViewDataErrorEventArgs.ThrowException" property to true. The exception object can typically be cast 
            to type <see cref="T:System.FormatException"></see>.</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Habanero.Faces.Base.IDataGridViewCell.ColumnIndex"></see> 
            is less than 0, indicating that the cell is a row header cell.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.IsInEditMode">
            <summary>Gets a value indicating whether this cell is currently being edited.</summary>
            <returns>true if the cell is in edit mode; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The row containing the cell is a shared row.</exception>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.ReadOnly">
            <summary>Gets or sets a value indicating whether the cell's data can be edited. </summary>
            <returns>true if the cell's data can be edited; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">There is no owning row when setting this property. 
            -or-The owning row is shared when setting this property.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.RowIndex">
            <summary>Gets the index of the cell's parent row. </summary>
            <returns>The index of the row that contains the cell; -1 if there is no owning row.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.Selected">
            <summary>Gets or sets a value indicating whether the cell has been selected. </summary>
            <returns>true if the cell has been selected; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">There is no associated <see cref="T:Habanero.Faces.Base.IDataGridView"></see> 
            when setting this property. -or-The owning row is shared when setting this property.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.Value">
            <summary>Gets or sets the value associated with this cell. </summary>
            <returns>Gets or sets the data to be displayed by the cell. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Habanero.Faces.Base.IDataGridViewCell.ColumnIndex"></see>
             is less than 0, indicating that the cell is a row header cell.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Habanero.Faces.Base.IDataGridViewCell.RowIndex"></see> 
            is outside the valid range of 0 to the number of rows in the control minus 1.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.ValueType">
            <summary>Gets or sets the data type of the values in the cell. </summary>
            <returns>A <see cref="T:System.Type"></see> representing the data type of the value in the cell.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.Visible">
            <summary>Gets a value indicating whether the cell is in a row or column that has been hidden. </summary>
            <returns>true if the cell is visible; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.EditType">
            <summary>Gets the type of the cell's hosted editing control. </summary>
            <returns>A <see cref="T:System.Type"></see> representing the 
            DataGridViewTextBoxEditingControl type.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCellWin.DefaultNewRowValue">
            <summary>Gets the default value for a cell in the row for new records.</summary>
            <returns>An <see cref="T:System.Object"></see> representing the default value.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.GridWithPanelControlWin`1">
            TODO: This uses ReadOnlyGridControl due to some flaw in ReadOnlyGrid. Look at switching back
            to the grid in the future.  What happens when you double-click?
            <summary>
            Represents a control to edit a collection of business objects.  A grid
            lists the objects as specified by SetBusinessObjectCollection and a control
            below the grid allows the selected business object to be edited.  Default
            buttons are provided: Save, New, Delete and Cancel.
            <br/>
            The editing control is
            specified here as a IBusinessObjectControl, allowing the developer to pass
            in a custom control, but the default instantiation uses a IBusinessObjectPanel,
            which is more suited to displaying errors.  If the developer provides a custom
            control, they are responsible for updating the business object status
            and displaying useful feedback to the user (by
            catching appropriate events on the business object or the controls).
            <br/>
            Some customisation is provided through the GridWithPanelControlStrategy,
            including how controls should be enabled for the appropriate environment.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridWithPanelControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.GridWithPanelControlWin`1"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="M:Habanero.Faces.Win.GridWithPanelControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBusinessObjectControl)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.GridWithPanelControlWin`1"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="businessObjectControl"></param>
        </member>
        <member name="M:Habanero.Faces.Win.GridWithPanelControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBusinessObjectControl,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.GridWithPanelControlWin`1"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="businessObjectControl"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="M:Habanero.Faces.Win.GridWithPanelControlWin`1.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.ReadOnlyGridControl">
            <summary>
            Gets the grid control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.BusinessObjectControl">
            <summary>
            Gets the control used to edit the selected business object
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.Buttons">
            <summary>
            Gets the control holding the buttons
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.CurrentBusinessObject">
            <summary>
             Returns the currently selected business object.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.GridWithPanelControlStrategy">
            <summary>
            Gets the strategy used to provide custom behaviour in the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.Habanero#Faces#Base#IGridWithPanelControl{TBusinessObject}#CurrentBusinessObject">
            <summary>
            Gets the business object currently selected in the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridWithPanelControlWin`1.ConfirmSaveDelegate">
            <summary>
            Called when the user attempts to move away from a dirty business object
            and needs to indicate Yes/No/Cancel to the option of saving.  This delegate
            facility is provided primarily to facilitate testing.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DefaultBOEditorFormWin">
            <summary>
            Provides a form used to edit business objects.  This form will usually
            be constructed using a UI Form definition provided in the class definitions.
            The appropriate UI definition is typically set in the constructor.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.FormWin">
            <summary>
            Represents a window or dialog box that makes up an application's user interface
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormWin.Show(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Shows the form with the specified owner to the user.
            </summary>
            <param name="owner">Any object that implements System.Windows.Forms.IWin32Window and represents the top-level window that will own this form.</param>
            <exception cref="T:System.ArgumentException">The form specified in the owner parameter is the same as the form being shown.</exception>
        </member>
        <member name="M:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IFormHabanero#ShowDialog">
            <summary>
            Shows the form as a modal dialog box with the currently active window set as its owner
            </summary>
            <returns>One of the DialogResult values</returns>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IFormHabanero#MdiParent">
            <summary>
            Gets or sets the current multiple document interface (MDI) parent form of this form
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IFormHabanero#WindowState">
            <summary>
            Gets or sets the form's window state.  The default is Normal.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IFormHabanero#StartPosition">
            <summary>
            Gets or sets the form start position.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.DialogResult">
            <summary>
            Gets or sets the dialog result that indicates what action was
            taken to close the form
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FormWin.Habanero#Faces#Base#IFormHabanero#FormBorderStyle">
            <summary>
             Gets or sets the border style of the form.
            </summary>
            <returns>A <see cref="T:Habanero.Faces.Base.FormBorderStyle"/> that represents the style of border to display for the form. 
             The default is <see cref="F:Habanero.Faces.Base.FormBorderStyle.Sizable"/>.
            </returns>
             <exceptions>
             <see cref="T:System.ComponentModel.InvalidEnumArgumentException"/>: The value specified is outside the range of valid values.
             </exceptions>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.#ctor(Habanero.BO.BusinessObject,System.String,Habanero.Faces.Base.IControlFactory,Habanero.Base.PostObjectEditDelegate)">
            <summary>
            Constructs the <see cref="T:Habanero.Faces.Win.DefaultBOEditorFormWin"/> class  with 
            the specified <see cref="T:Habanero.BO.BusinessObject"/>, uiDefName, <see cref="T:Habanero.Faces.Base.IControlFactory"/> and post edit action. 
            </summary>
            <param name="bo">The business object to represent</param>
            <param name="uiDefName">The name of the ui def to use.</param>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use for creating the Editor form controls</param>
            <param name="action">Action to be performed when the editing is completed or cancelled. Typically used if you want to update
            a grid or a list in an asynchronous environment (E.g. to select the recently edited item in the grid).</param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.#ctor(Habanero.BO.BusinessObject,System.String,Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.GroupControlCreator)">
            <summary>
            Constructs the <see cref="T:Habanero.Faces.Win.DefaultBOEditorFormWin"/> class  with 
            the specified businessObject, uiDefName and post edit action. 
            </summary>
            <param name="bo">The business object to represent</param>
            <param name="uiDefName">The name of the ui def to use.</param>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use for creating the Editor form controls</param>
            <param name="creator">The Creator used to Create the Group Control.</param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.#ctor(Habanero.BO.BusinessObject,System.String,Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructs the <see cref="T:Habanero.Faces.Win.DefaultBOEditorFormWin"/> class  with 
            the specified <see cref="T:Habanero.BO.BusinessObject"/>, uiDefName and <see cref="T:Habanero.Faces.Base.IControlFactory"/>. 
            </summary>
            <param name="bo">The business object to represent</param>
            <param name="uiDefName">The name of the ui def to use.</param>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use for creating the Editor form controls</param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.CreateLayout">
            <summary>
            Sets all the controls up in a layout manager. By default uses the border layout manager
            with the editor control centre and the buttons south.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.SetupFormSize(Habanero.BO.ClassDefinition.IUIForm)">
            <summary>
            Sets up the forms size based on the BOPanel and the Buttons.
            </summary>
            <param name="def"></param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.CreateSaveTransaction">
            <summary>
            Creates a transaction Committer with the Business Object added.
            </summary>
            <returns>Returns the transaction object</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.OkButtonHandler(System.Object,System.EventArgs)">
            <summary>
            A handler to respond when the "OK" button has been pressed.
            All changes are committed to the database and the dialog is closed.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.CancelButtonHandler(System.Object,System.EventArgs)">
            <summary>
            A handler to respond when the "Cancel" button has been pressed.
            Any unsaved edits are cancelled and the dialog is closed.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.DefaultBOEditorFormWin.Habanero#Faces#Base#IDefaultBOEditorForm#ShowDialog">
            <summary>
            Pops the form up in a modal dialog.  If the BO is successfully edited and saved, returns true,
            else returns false.
            </summary>
            <returns>True if the edit was a success, false if not</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DefaultBOEditorFormWin.BoPanel">
            <summary>
            Returns the BOPanel being used to edit the form.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DefaultBOEditorFormWin.Buttons">
            <summary>
            Gets the button control for the buttons in the form
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DefaultBOEditorFormWin.PanelInfo">
            <summary>
            Gets the object containing all information related to the form, including
            its controls, mappers and business object
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DefaultBOEditorFormWin.GroupControlCreator">
            <summary>
             The Creator (<see cref="P:Habanero.Faces.Base.IDefaultBOEditorForm.GroupControlCreator"/> used to create the <see cref="T:Habanero.Faces.Base.IGroupControl"/>
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.PictureBoxWin">
            <summary>
            Represents a TextBox control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.PictureBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.PictureBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.PictureBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.PictureBoxWin.Habanero#Faces#Base#IPictureBox#SizeMode">
            <summary>
            Indicates how the image is displayed.
            </summary>
            <returns>One of the <see cref="T:Habanero.Faces.Base.PictureBoxSizeMode"></see> values. The default is <see cref="F:Habanero.Faces.Base.PictureBoxSizeMode.Normal"></see>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:Habanero.Faces.Base.PictureBoxSizeMode"></see> values. </exception>
        </member>
        <member name="T:Habanero.Faces.Win.HelpAboutBoxWin">
            <summary>
            Provides a form that displays information about the application
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.HelpAboutBoxWin.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor to initialise a new About form with the given
            information
            </summary>
            <param name="programName">The program name</param>
            <param name="producedForName">Who the program is produced for</param>
            <param name="producedByName">Who produced the program</param>
            <param name="versionNumber">The version number</param>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewColumnWin">
            <summary>
            Represents a column in a DataGridView control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewColumnWin.#ctor(System.Windows.Forms.DataGridViewColumn)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.DataGridViewColumnWin"/>
            </summary>
            <param name="dataGridViewColumn"></param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.DataGridViewColumn">
            <summary>
             Returns the DataGridViewColumn of type 'System.Windows.Forms'
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.Control">
            <summary>
             Returns the underlying control being wrapped by this decorator.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.DataPropertyName">
            <summary>Gets or sets the name of the data source property or database column to which 
            the <see cref="T:Habanero.Faces.Base.IDataGridViewColumn"></see> is bound.</summary>
            <returns>The name of the property or database column associated with the <see cref="T:Habanero.Faces.Base.IDataGridViewColumn"></see>.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.HeaderText">
            <summary>Gets or sets the caption text on the column's header cell.</summary>
            <returns>A <see cref="T:System.String"></see> with the desired text. The default is an empty string ("").</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.Name">
            <summary>Gets or sets the name of the column.</summary>
            <returns>A <see cref="T:System.String"></see> that contains the name of the column. The default is an empty string ("").</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.ReadOnly">
            <summary>Gets or sets a value indicating whether the user can edit the column's cells.</summary>
            <returns>true if the user cannot edit the column's cells; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">This property is set to false for 
            a column that is bound to a read-only data source. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.SortMode">
            <summary>Gets or sets the sort mode for the column.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.DataGridViewColumnSortMode"></see> that specifies the criteria used 
            to order the rows based on the cell values in a column.</returns>
            <exception cref="T:System.InvalidOperationException">The value assigned to the property 
            conflicts with SelectionMode. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.ToolTipText">
            <summary>Gets or sets the text used for ToolTips.</summary>
            <returns>The text to display as a ToolTip for the column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.ValueType">
            <summary>Gets or sets the data type of the values in the column's cells.</summary>
            <returns>A <see cref="T:System.Type"></see> that describes the run-time class of the values stored in the column's cells.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.Width">
            <summary>Gets or sets the current width of the column.</summary>
            <returns>The width, in pixels, of the column. The default is 100.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting 
            this property is greater than 65536.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.Visible">
            <summary>Gets or sets a value indicating whether the column is visible.</summary>
            <returns>true if the column is visible; otherwise, false.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewColumnWin.DefaultCellStyle">
            <summary>Gets or sets the column's default cell style.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see> that represents the default style of the cells in the column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.FileChooserWin">
            <summary>
            Provides a means to choose a file and makes the selected
            path available to a control that needs it
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FileChooserWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.FileChooserWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="P:Habanero.Faces.Win.FileChooserWin.SelectedFilePath">
            <summary>
            Gets or sets the selected file path
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.BorderLayoutManagerWin">
            <summary>
            Manages the layout of controls in a user interface by having a
            component assigned a compass position.  For instance, having the
            "east" position assigned will result in the control being placed
            against the right border.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BorderLayoutManagerWin.#ctor(Habanero.Faces.Base.IControlHabanero,Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.BorderLayoutManagerWin"/>
            </summary>
            <param name="managedControl"></param>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BorderLayoutManagerWin.SetupDockOfControl(Habanero.Faces.Base.IControlHabanero,Habanero.Faces.Base.BorderLayoutManager.Position)">
            <summary>
            Sets how the specified control is docked within its parent
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BorderLayoutManagerWin.AddControl(Habanero.Faces.Base.IControlHabanero,Habanero.Faces.Base.BorderLayoutManager.Position,System.Boolean)">
            <summary>
            Add a control to the layout
            </summary>
            <param name="control">The control to add</param>
            /// <param name="pos">The position at which to add the control</param>
            <param name="includeSplitter">True to include a splitter between the controls</param>
            <returns>Returns the control added</returns>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsiblePanelSelectorWin">
            <summary>
             Provides an implementation of the <see cref="T:Habanero.Faces.Base.IBOCollapsiblePanelSelector"/> an interface 
             for a control that specialises in showing a list of 
             Business Objects <see cref="T:Habanero.Base.IBusinessObjectCollection"/>.
             This control shows each business object in its own collapsible Panel.
             This is a very powerfull control for easily adding or viewing a fiew items E.g. for 
             a list of addresses for a person.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsiblePanelGroupControlWin">
            <summary>
            An interface for a Group on <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>s. 
              The collapsible Panels are placed one above the other and when the one opens the panels below
              are moved down.
            The Interface works simply, you add the controls (AddControl) that will be displayed on 
                an <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> on this control in the order that you want them displayed.
            This control will then create the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> with the appropriate heading text and
                the appropriate Expanded (<see cref="P:Habanero.Faces.Base.ICollapsiblePanel.ExpandedHeight"/> and Collapsed height.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.#ctor">
            <summary>
            Constructs the <see cref="T:Habanero.Faces.Win.CollapsiblePanelGroupControlWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.AddControl(Habanero.Faces.Base.IControlHabanero,System.String,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.Faces.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in an <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> control.
            </summary>
            <param name="contentControl"></param>
            <param name="headingText"></param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with the <see cref="P:Habanero.Faces.Base.ICollapsiblePanel.CollapseButton"/>.Height are give the 
              <see cref="P:Habanero.Faces.Base.ICollapsiblePanel.ExpandedHeight"/> that the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> will be when it is 
              expanded </param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.AddControl(Habanero.Faces.Base.ICollapsiblePanel)">
            <summary>
            Adds an <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> to this control. The <paramref name="collapsiblePanel"/> is
              added to this <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/>
            </summary>
            <param name="collapsiblePanel"></param>
            <returns>The collapsible Panel</returns>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.Habanero#Faces#Base#IGroupControl#AddControl(Habanero.Faces.Base.IControlHabanero,System.String,System.Int32,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.Faces.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in the appropriate Child Control Type.
            </summary>
            <param name="contentControl">The control that is being placed as a child within this control. The content control could be 
             a Panel of <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>s or any other child control</param>
            <param name="headingText">The heading text that will be shown as the Header for this Group e.g. For a <see cref="T:Habanero.Faces.Base.ITabControl"/>
              this will be the Text shown in the Tab for a <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/> this will be the text shown
              on the Collapse Panel and for an <see cref="T:Habanero.Faces.Base.IGroupBox"/> this will be the title of the Group Box.</param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be. This height along with any other spacing required will be used as the minimum height for the ChildControlCreated</param>
            <param name="minimumControlWidth">The minimum width that the control can be.</param>
            <returns></returns>
        </member>
        <member name="E:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.ItemSelected">
            <summary>
            Event handler for the Uncollapsed Event on any of the Collapsible Panels.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.PanelsList">
            <summary>
            A List of all <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>s that are being managed and displayed by this Control.
            This must be treated as a ReadOnly List i.e. Never use PanelList.Add or PanelList.Remove.
            Since this will cause the Panel List to be out of sync with the ControlsCollection.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.ColumnLayoutManager">
            <summary>
            Returns the <see cref="P:Habanero.Faces.Base.ICollapsiblePanelGroupControl.ColumnLayoutManager"/> that is used for Laying out the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>s
              on this control.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.ControlFactory">
            <summary>
            The <see cref="T:Habanero.Faces.Base.IControlFactory"/> being used to create the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>s
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.TotalExpandedHeight">
            <summary>
            Returns the Total Expanded Height of this Control. I.e. the total height of this control required
            if all the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> controls are fully expanded.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property is changed
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelGroupControlWin.AllCollapsed">
            <summary>
            Sets whether all the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> controls are collapsed or expanded AllCollapsed = true will 
              <see cref="P:Habanero.Faces.Base.ICollapsiblePanel.Collapsed"/> = true for all the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>s.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelSelectorWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.CollapsiblePanelSelectorWin"/>
            </summary>
            <param name="controlFactory"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelSelectorWin.BusinessObjectRemovedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been removed from
            the collection - it subsequently removes the item from the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelSelectorWin.BusinessObjectAddedHandler(System.Object,Habanero.Base.BOEventArgs)">
            <summary>
            This handler is called when a business object has been added to
            the collection - it subsequently adds the item to the ListBox
            list as well.
            </summary>
            <param name="sender">The object that notified of the change</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelSelectorWin.Clear">
            <summary>
            Clears the business object collection and the rows in the selector
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelSelectorWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelSelectorWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelSelectorWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the selector
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.CollapsiblePanelSelectorWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelSelectorWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelSelectorWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ControlMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a control
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.AddCurrentBOPropHandlers(Habanero.Faces.Base.ControlMapper,Habanero.Base.IBOProp)">
            <summary>
            Adds handlers to events of a current business object property.
            </summary>
            <param name="mapper">The control mapper that maps the business object property to the control</param>
            <param name="boProp">The business object property being mapped to the control</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.RemoveCurrentBOPropHandlers(Habanero.Faces.Base.ControlMapper,Habanero.Base.IBOProp)">
            <summary>
            Removes handlers to events of a current business object property.
            It is essential that if the AddCurrentBoPropHandlers is implemented then this 
            is implemented such that editing a business object that is no longer being shown on the control does not
            does not update the value in the control.
            </summary>
            <param name="mapper">The control mapper that maps the business object property to the control</param>
            <param name="boProp">The business object property being mapped to the control</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.AddKeyPressEventHandler(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Handles the default key press behaviours on a control.
            This is typically used to change the handling of the enter key (such as having
            the enter key cause focus to move to the next control).
            </summary>
            <param name="control">The control whose events will be handled</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.CtlKeyPressHandler(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            A handler to deal with the case where a key has been pressed.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.CtlKeyDownHandler(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            A handler to deal with the case where a key is down.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.CtlKeyUpHandler(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            A handler to deal with the case where a key has been released.
            If the key is an Enter key, focus moves to the next item in the
            tab order.
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.GetNextControlInTabOrder(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Provides the next item in the tab order on a control
            </summary>
            <param name="parentControl">The parent of the controls in question</param>
            <param name="control">The current control</param>
            <returns>Returns the next control in the tab order</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlMapperStrategyWin.GetFirstControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Provides the first control in the tab order on a control
            </summary>
            <param name="parentControl">The parent of the controls in question</param>
            <param name="control">The current control</param>
            <returns>Returns the first control in the tab order</returns>
        </member>
        <member name="T:Habanero.Faces.Win.BOEditorControlWin">
            <summary>
             A Control for Editing/Viewing an <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Base.IClassDef,System.String)">
            <summary>
             The Constructor for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/> which passes in the
             <paramref name="classDef"/> for the <see cref="T:Habanero.Base.IBusinessObject"/> and the <paramref name="uiDefName"/> that 
              is used to defined the User Interface for the <see cref="T:Habanero.Base.IBusinessObject"/>      
            </summary>
            <param name="controlFactory">The control factory which is used to create the Controls on this form.</param>
            <param name="classDef">The <see cref="T:Habanero.Base.IClassDef"/> for the  <see cref="T:Habanero.Base.IBusinessObject"/> that will be edited by this control</param>
            <param name="uiDefName">The user interface defined in the <see cref="T:Habanero.Base.IClassDef"/> that will be used to Build this control</param>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin.#ctor(Habanero.Base.IClassDef)">
            <summary>
             The Constructor for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/> which passes in the
             <paramref name="classDef"/> for the <see cref="T:Habanero.Base.IBusinessObject"/> and
              this control will be built using the default <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> and the <see cref="T:Habanero.Faces.Base.IControlFactory"/> 
              from the <see cref="P:Habanero.Faces.Base.GlobalUIRegistry.ControlFactory"/>
              is used to defined the User Interface for the <see cref="T:Habanero.Base.IBusinessObject"/>      
            </summary>
            <param name="classDef">The <see cref="T:Habanero.Base.IClassDef"/> for the  <see cref="T:Habanero.Base.IBusinessObject"/> that will be edited by this control</param>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin.SetEnableState">
            <summary>
            Sets the forms enabled state.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin.ApplyChangesToBusinessObject">
            <summary>
            Applies any changes that have occured in any of the Controls on this control's to their related
            Properties on the Business Object.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.BusinessObject">
            <summary>
            Gets or sets the business object being represented
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.PanelInfo">
            <summary>
             The PanelInfo for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.HasErrors">
            <summary>
            Does the business object controlled by this control or any of its Aggregate or Composite children have and Errors.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.HasWarning">
            <summary>
            Does the Business Object controlled by this control or any of its Aggregate or Composite children have and warnings.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.Errors">
            <summary>
             Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.IsDirty">
            <summary>
            Does the business object being managed by this control have any edits that have not been persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin.Warnings">
            <summary>
            Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.Faces.Win.BOEditorControlWin`1">
            <summary>
             A Control for Editing/Viewing an <see cref="T:Habanero.Base.IBusinessObject"/> of type T.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
             The Constructor for <see cref="T:Habanero.Faces.Win.BOEditorControlWin`1"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="uiDefName">the user interface that identifies the <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> that will be used
             for building the <see cref="T:Habanero.Base.IBusinessObject"/>'s Controls. </param>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.#ctor">
            <summary>
             The Constructor for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/> 
              this control will be built using the default <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> and the <see cref="T:Habanero.Faces.Base.IControlFactory"/> 
              from the <see cref="P:Habanero.Faces.Base.GlobalUIRegistry.ControlFactory"/>
              is used to defined the User Interface for the <see cref="T:Habanero.Base.IBusinessObject"/>      
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.#ctor(System.String)">
            <summary>
             The Constructor for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/> 
              this control will be built using the default <see cref="T:Habanero.BO.ClassDefinition.UIDef"/> and the <see cref="T:Habanero.Faces.Base.IControlFactory"/> 
              from the <see cref="P:Habanero.Faces.Base.GlobalUIRegistry.ControlFactory"/>
              is used to defined the User Interface for the <see cref="T:Habanero.Base.IBusinessObject"/>      
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.SetEnableState">
            <summary>
            Sets the forms enabled state.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.DisplayErrors">
            <summary>
            Displays any errors or invalid fields associated with the BusinessObjectInfo
            being edited.  A typical use would involve activating the ErrorProviders
            on a BO panel.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.ClearErrors">
            <summary>
            Hides all the error providers.  Typically used where a new object has just
            been added and the interface is being cleaned up.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOEditorControlWin`1.ApplyChangesToBusinessObject">
            <summary>
            Applies any changes that have occured in any of the Controls on this control's to their related
            Properties on the Business Object.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.BusinessObject">
            <summary>
            Gets or sets the business object being represented
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.PanelInfo">
            <summary>
             The PanelInfo for the <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.HasErrors">
            <summary>
            Does the business object controlled by this control or any of its Aggregate or Composite children have and Errors.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.HasWarning">
            <summary>
            Does the Business Object controlled by this control or any of its Aggregate or Composite children have and warnings.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.Errors">
            <summary>
             Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.IsDirty">
            <summary>
            Does the business object being managed by this control have any edits that have not been persisted.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Habanero.Faces.Win.BOEditorControlWin`1.Warnings">
            <summary>
            Returns a list of all warnings for the business object controlled by this control or any of its children.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.Faces.Win.BOEditorControlUtils">
            <summary>
            A Utility Class used by <see cref="T:Habanero.Faces.Win.BOEditorControlWin"/> and <see cref="T:Habanero.Faces.Win.BOEditorControlWin`1"/> providing common functionality.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ListBoxSelectorWin">
            <summary>
            Provides an implementation of <see cref="T:Habanero.Faces.Base.IBOListBoxSelector"/> that is specialised for showing a collection of 
            Business Objects (<see cref="T:Habanero.Base.IBusinessObjectCollection"/>) in a <see cref="T:Habanero.Faces.Base.IListBox"/> and allowing the user to select one.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ListBoxWin">
            <summary>
            Represents a control to display a list of items
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.#ctor">
            <summary>
            Constructor for <see cref="T:Habanero.Faces.Win.ListBoxWin"/>
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.Items">
            <summary>
            Gets the items of the ListBox
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.SelectedItems">
            <summary>
            Gets a collection containing the currently selected items in the ListBox
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.SelectionMode">
            <summary>
            Gets or sets the method in which items are selected in the ListBox
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin">
            <summary>
            Represents the collection of items in a ListBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Add(System.Object)">
            <summary>
            Adds an item to the list of items for a ListBox
            </summary>
            <param name="item">An object representing the item to add to the collection</param>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Remove(System.Object)">
            <summary>
            Removes the specified object from the collection
            </summary>
            <param name="item">An object representing the item to remove from the collection</param>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Clear">
            <summary>
            Removes all items from the collection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Contains(System.Object)">
            <summary>
            Determines if the specified item is located within the collection
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>true if the item is located within the collection; otherwise, false</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.IndexOf(System.Object)">
            <summary>
            Retrieves the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>The zero-based index where the item is
            located within the collection; otherwise, -1</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxWin.ListBoxObjectCollectionWin.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index within the collection
            </summary>
            <param name="index">The index of the item in the collection to retrieve</param>
            <returns>An object representing the item located at the
            specified index within the collection</returns>
        </member>
        <member name="T:Habanero.Faces.Win.ListBoxWin.ListBoxSelectedObjectCollectionWin">
            <summary>
            Represents the collection of selected items in the ListBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxSelectedObjectCollectionWin.Add(System.Object)">
            <summary>
            Adds an item to the list of selected items for a ListBox
            </summary>
            <param name="item">An object representing the item to add
            to the collection of selected items</param>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxWin.ListBoxSelectedObjectCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxSelectorWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ListBoxSelectorWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxSelectorWin.#ctor">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ListBoxSelectorWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxSelectorWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListBoxSelectorWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxSelectorWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxSelectorWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ListBoxSelectorWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxSelectorWin.ListBox">
            <summary>
             Returns the Underlying <see cref="T:Habanero.Faces.Base.IListBox"/> that is used by this selector
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxSelectorWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ListBoxSelectorWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.Grid.DataGridViewSelectionModeWin">
            <summary>
             Class that provides utility methods for the <see cref="T:System.Windows.Forms.DataGridViewSelectionMode"/> class
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.Grid.DataGridViewSelectionModeWin.GetDataGridViewSelectionMode(System.Windows.Forms.DataGridViewSelectionMode)">
            <summary>
             Gets the Habanero <see cref="T:Habanero.Faces.Base.DataGridViewSelectionMode"/> equivalent to the provided System.Windows.Forms <see cref="T:System.Windows.Forms.DataGridViewSelectionMode"/>.
            </summary>
            <param name="DataGridViewSelectionMode">A System.Windows.Forms <see cref="T:System.Windows.Forms.DataGridViewSelectionMode"/>.</param>
            <returns>The equivalent Habanero <see cref="T:Habanero.Faces.Base.DataGridViewSelectionMode"/>.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.Grid.DataGridViewSelectionModeWin.GetDataGridViewSelectionMode(Habanero.Faces.Base.DataGridViewSelectionMode)">
            <summary>
             Gets the System.Windows.Forms <see cref="T:System.Windows.Forms.DataGridViewSelectionMode"/> equivalent to the provided Habanero <see cref="T:Habanero.Faces.Base.DataGridViewSelectionMode"/>.
            </summary>
            <param name="DataGridViewSelectionMode">A Habanero <see cref="T:Habanero.Faces.Base.DataGridViewSelectionMode"/>.</param>
            <returns>The equivalent System.Windows.Forms <see cref="T:System.Windows.Forms.DataGridViewSelectionMode"/>.</returns>
        </member>
        <member name="T:Habanero.Faces.Win.ExtendedComboBoxWin">
            <summary>
             A <see cref="P:Habanero.Faces.Win.ExtendedComboBoxWin.ComboBox"/> with a <see cref="P:Habanero.Faces.Win.ExtendedComboBoxWin.Button"/> next to it on the right with a '...' displayed as the text.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ExtendedComboBoxWin.#ctor">
            <summary>
             Constructs the <see cref="T:Habanero.Faces.Win.ExtendedComboBoxWin"/> with the default <see cref="T:Habanero.Faces.Base.IControlFactory"/>.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ExtendedComboBoxWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs the <see cref="T:Habanero.Faces.Win.ExtendedComboBoxWin"/> with the specified <see cref="T:Habanero.Faces.Base.IControlFactory"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ExtendedComboBoxWin.ComboBox">
            <summary>
             Returns the <see cref="P:Habanero.Faces.Base.IExtendedComboBox.ComboBox"/> in the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ExtendedComboBoxWin.Button">
            <summary>
             Returns the <see cref="P:Habanero.Faces.Base.IExtendedComboBox.Button"/> in the control
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewImageColumnWin">
            <summary>
            Hosts a collection of DataGridViewImageCell objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewImageColumnWin.#ctor(System.Windows.Forms.DataGridViewImageColumn)">
            <summary>
            Constructor for <see cref="T:Habanero.Faces.Win.DataGridViewImageColumnWin"/> 
            </summary>
            <param name="dataGridViewColumn"></param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewImageColumnWin.Description">
            <summary>Gets or sets a string that describes the column's image. </summary>
            <returns>The textual description of the column image. The default is <see cref="F:System.String.Empty"></see>.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewImageColumnWin.Icon">
            <summary>Gets or sets the icon displayed in the cells of this column when the
             cell's Value property is not set and the cell's ValueIsIcon property is set to true.</summary>
            <returns>The <see cref="T:System.Drawing.Icon"></see> to display. The default is null.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewImageColumnWin.Image">
            <summary>Gets or sets the image displayed in the cells of this column when the 
            cell's Value property is not set and the cell's ValueIsIcon property is set to false.</summary>
            <returns>The <see cref="T:System.Drawing.Image"></see> to display. The default is null.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewImageColumnWin.ValuesAreIcons">
            <summary>Gets or sets a value indicating whether cells in this column display 
            <see cref="T:System.Drawing.Icon"></see> values.</summary>
            <returns>true if cells display values of type <see cref="T:System.Drawing.Icon"></see>; false 
            if cells display values of type <see cref="T:System.Drawing.Image"></see>. The default is false.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null.</exception>
        </member>
        <member name="T:Habanero.Faces.Win.ControlWin">
            <summary>
            Defines controls, which are components with visual representation
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ControlWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.ControlWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>  
        </member>
        <member name="P:Habanero.Faces.Win.ControlWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.SplitterWin">
            <summary>
            Represents a splitter control that enables the user to resize docked controls.
            Splitter has been replaced by SplitContainer and is provided only for compatibility with previous versions.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.SplitterWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.SplitterWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.SplitterWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ListComboBoxMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a list ComboBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ListComboBoxMapperStrategyWin.AddItemSelectedEventHandler(Habanero.Faces.Base.ListComboBoxMapper)">
             <summary>
             Adds an ItemSelected event handler.
             For Windows Forms you may want the business object to be updated immediately, however
             for a web environment with low bandwidth you may choose to only update when the user saves.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.GridBaseWin">
            <summary>
            Provides a DataGridView that is adapted to show business objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.#ctor">
            <summary>
            Constructor for <see cref="T:Habanero.Faces.Win.GridBaseWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.CheckUserWantsToDelete">
            <summary>
            Displays a message box to the user to check if they want to proceed with
            deleting the selected rows.
            </summary>
            <returns>Returns true if the user does want to delete</returns>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.RefreshBusinessObjectRow(Habanero.Base.IBusinessObject)">
            <summary>
             Refreshes the row values for the specified <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
            <param name="businessObject">The <see cref="T:Habanero.Base.IBusinessObject"/> for which the row must be refreshed.</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.DoubleClickHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the event of a double-click
            </summary>
            <param name="sender">The object that notified of the event</param>
            <param name="e">Attached arguments regarding the event</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.FireRowDoubleClicked(Habanero.Base.IBusinessObject)">
            <summary>
            Creates an event for a row being double-clicked
            </summary>
            <param name="selectedBo">The business object to which the
            double-click applies</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.CreateDataSetProvider(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Creates a dataset provider that is applicable to this grid. For example, a readonly grid would
            return a <see cref="T:Habanero.BO.ReadOnlyDataSetProvider"/>, while an editable grid would return an editable one.
            </summary>
            <param name="col">The collection to create the datasetprovider for</param>
            <returns>Returns the data set provider</returns>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
            <param name="col">The collection of business objects to display.  This
            collection must be pre-loaded.</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.GetBusinessObjectCollection">
            <summary>
            Returns the business object collection being displayed in the grid
            </summary>
            <returns>Returns a business collection</returns>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.GetBusinessObjectRow(Habanero.Base.IBusinessObject)">
            <summary>
             Returns the row for the specified <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
            <param name="businessObject">The <see cref="T:Habanero.Base.IBusinessObject"/> to search for.</param>
            <returns>Returns the row for the specified <see cref="T:Habanero.Base.IBusinessObject"/>, 
             or null if the <see cref="T:Habanero.Base.IBusinessObject"/> is not found in the grid.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.SelectedBusinessObjectEdited(Habanero.BO.BusinessObject)">
            <summary>
            Fires an event indicating that the selected business object
            is being edited
            </summary>
            <param name="bo">The business object being edited</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.FireBusinessObjectEditedEvent(Habanero.BO.BusinessObject)">
            <summary>
            Fires the Selected Business Object Edited Event for <paramref name="bo"/>
            </summary>
            <param name="bo">The Business object the event is being fired for</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.RefreshGrid">
            <summary>
            Reloads the grid based on the grid returned by GetBusinessObjectCollection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.ApplyFilter(Habanero.Base.IFilterClause)">
            <summary>
            Applies a filter clause to the data table and updates the filter.
            The filter allows you to determine which objects to display using
            some criteria.  This is typically generated by an <see cref="T:Habanero.Faces.Base.IFilterControl"/>.
            </summary>
            <param name="filterClause">The filter clause</param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.ApplySearch(Habanero.Base.IFilterClause,System.String)">
            <summary>
            Applies a search clause to the underlying collection and reloads the grid.
            The search allows you to determine which objects to display using
            some criteria.  This is typically generated by the an <see cref="T:Habanero.Faces.Base.IFilterControl"/>.
            </summary>
            <param name="searchClause">The search clause</param>
            <param name="orderBy"></param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.ApplySearch(System.String,System.String)">
            <summary>
            Applies a search clause to the underlying collection and reloads the grid.
            The search allows you to determine which objects to display using
            some criteria.  This is typically generated by the an <see cref="T:Habanero.Faces.Base.IFilterControl"/>.
            </summary>
            <param name="searchClause">The search clause</param>
            <param name="orderBy"></param>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.FireFilterUpdated">
            <summary>
            Calls the FilterUpdated() method, passing this instance as the
            sender
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GridBaseWin.MustDelete">
            <summary>
            Uses the <see cref="P:Habanero.Faces.Win.GridBaseWin.ConfirmDeletion"/> and <see cref="T:Habanero.Faces.Base.CheckUserConfirmsDeletion"/> to determine
            Whether the <see cref="P:Habanero.Faces.Win.GridBaseWin.SelectedBusinessObject"/> must be deleted or not.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Habanero.Faces.Win.GridBaseWin.BusinessObjectSelected">
            <summary>
            Occurs when a business object is selected
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.GridBaseWin.CollectionChanged">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.GridBaseWin.FilterUpdated">
            <summary>
            Event raised when the filter has been updated.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.GridBaseWin.RowDoubleClicked">
            <summary>
            Occurs when a row is double-clicked by the user
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.UiDefName">
            <summary>
            Gets and sets the UI definition used to initialise the grid structure (the UI name is indicated
            by the "name" attribute on the UI element in the class definitions
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.ClassDef">
            <summary>
            Gets and sets the class definition used to initialise the grid structure
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.GridBaseManager">
            <summary>
            Returns the grid base manager for this grid, which centralises common
            logic for the different implementations
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.SelectedBusinessObjects">
            <summary>
            Gets a List of currently selected business objects
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.GridLoader">
            <summary>
            Gets and sets the delegated grid loader for the grid.
            <br/>
            This allows the user to implememt a custom
            loading strategy. This can be used to load a collection of business objects into a grid with images or buttons
            that implement custom code. (Grids loaded with a custom delegate generally cannot be set up to filter 
            (grid filters a dataview based on filter criteria),
            but can be set up to search (a business object collection loaded with criteria).
            For a grid to be filterable the grid must load with a dataview.
            <br/>
            If no grid loader is specified then the default grid loader is employed. This consists of parsing the collection into 
            a dataview and setting this as the datasource.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.DataSetProvider">
            <summary>
            Gets the grid's DataSet provider, which loads the collection's
            data into a DataSet suitable for the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.IDColumnName">
            <summary>
             Returns the name of the column being used for tracking the business object identity.
             If a <see cref="T:Habanero.Base.IDataSetProvider"/> is used then it will be the <see cref="P:Habanero.Base.IDataSetProvider.IDColumnName"/>
             Else it will be "HABANERO_OBJECTID".
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.GridBaseWin.BusinessObjectEdited">
            <summary>
            Occurs when a business object is being edited
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.Habanero#Faces#Base#IBOColSelector#NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.ConfirmDeletion">
            <summary>
            Gets or sets the boolean value that determines whether to confirm
            deletion with the user when they have chosen to delete a row
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GridBaseWin.CheckUserConfirmsDeletionDelegate">
            <summary>
            Gets or sets the delegate that checks whether the user wants to delete selected rows
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxAutoCompleteSourceWin.GetAutoCompleteSource(System.Windows.Forms.AutoCompleteSource)">
            <summary>
             Gets the Habanero AutoCompleteSource equivalent to the provided System.Windows.AutoCompleteSource
            </summary>
            <param name="autoCompleteSource">A System.Windows.Forms AutoCompleteSource.</param>
            <returns>The equivalent Habanero AutoCompleteSource.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxAutoCompleteSourceWin.GetAutoCompleteSource(Habanero.Faces.Base.AutoCompleteSource)">
            <summary>
             Gets the System.Windows.Forms AutoCompleteSource equivalent to the provided Habanero AutoCompleteSource
            </summary>
            <param name="autoCompleteSource">A Habanero  AutoCompleteSource.</param>
            <returns>The equivalent System.Windows.Forms  AutoCompleteSource.</returns>
        </member>
        <member name="T:Habanero.Faces.Win.WizardFormWin">
            <summary>
            Represents a form containing a wizard control that guides users
            through a process step by step.
            This form simply wraps the WizardControl in a form and handles communication with the user.
            </summary>
        </member>
        <member name="F:Habanero.Faces.Win.WizardFormWin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.#ctor(Habanero.Faces.Base.IWizardController)">
            <summary>
            Initialises the WizardForm, sets the controller and starts the wizard.
            </summary>
            <param name="controller">the wizrd controller that controls moving the wizard steps and the </param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.#ctor(Habanero.Faces.Base.IWizardController,Habanero.Faces.Base.IControlFactory)">
            <summary>
            Initialises the WizardForm, sets the controller and starts the wizard.
            </summary>
            <param name="controller">the wizrd controller that controls moving the wizard steps and the </param>
            <param name="controlFactory">The control factory to use for creating any controls</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.#ctor(Habanero.Faces.Win.WizardControlWin)">
            <summary>
            Initialises the WizardForm, sets the controller and starts the wizard.
            </summary>
            <param name="control">The WizardControl that this form is showing.</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.Refresh">
            <summary>
            Forces the form to invalidate its client area and
            immediately redraw itself and any child controls
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.Show(System.String,Habanero.Faces.Base.IWizardController,Habanero.Faces.Base.IControlFactory)">
            <summary>
            A convenience method to show a wizard using a particular title and wizard controller
            </summary>
            <param name="title">The title of the wizard, displayed in the title bar of the form</param>
            <param name="wizardController">The wizard controller</param>
            <param name="controlFactory">the factory used to create the controls on the wizard</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardFormWin.ShowDialog(System.String,Habanero.Faces.Base.IWizardController,Habanero.Faces.Base.IControlFactory)">
            <summary>
            A convenience method to show a wizard using a particular title and wizard controller in a dialog
            </summary>
            <param name="title">The title of the wizard, displayed in the title bar of the form</param>
            <param name="wizardController">The wizard controller</param>
            <param name="controlFactory">the factory used to create the controls on the wizard</param>
        </member>
        <member name="P:Habanero.Faces.Win.WizardFormWin.WizardText">
            <summary>
            Gets and sets the text to dispaly
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardFormWin.WizardControl">
            <summary>
            Gets the WizardControl
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardFormWin.Habanero#Faces#Base#IFormHabanero#MdiParent">
            <summary>
            Gets or sets the current multiple document interface (MDI) parent form of this form
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.TreeViewWin">
            <summary>
            Displays a hierarchical collection of labeled items, each represented by a TreeNode
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.#ctor">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin"/>
            </summary>
            <param name="controlFactory">The Control Factory to use to construct new nodes</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.GetNodeAt(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="intX"></param>
             <param name="intY"></param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.AfterCheck" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.AfterExpand" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:Habanero.Faces.Base.ITreeView.BeforeExpand"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data. </param>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.AfterSelect">
            <summary>
            An event that is fired after the <see cref="T:Habanero.Faces.Base.ITreeNode"/>  is selected.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.BeforeSelect">
            <summary>
            An event that is fired just before the <see cref="T:Habanero.Faces.Base.ITreeNode"/> is selected.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.BeforeExpand">
            <summary>Occurs before the tree node is expanded.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.BeforeCheck">
            <summary>Occurs before the tree node check box is checked.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.BeforeCollapse">
            <summary>Occurs before the tree node is collapsed.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.AfterCheck">
            <summary>Occurs after the tree node check box is checked.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.AfterExpand">
            <summary>Occurs after the tree node is expanded.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Habanero.Faces.Win.TreeViewWin.AfterCollapse">
            <summary>Occurs after the tree node is collapsed.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>  
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.Nodes">
            <summary>
            The collection (<see cref="T:Habanero.Faces.Base.ITreeNodeCollection"/>) of <see cref="T:Habanero.Faces.Base.ITreeNode"/>s in this <see cref="T:Habanero.Faces.Base.ITreeView"/>.
            This collection only returns the <see cref="T:Habanero.Faces.Base.ITreeNode"/>s that are directly assigned to the <see cref="T:Habanero.Faces.Base.ITreeView"/>.
            i.e. all the nodes shown in this collection are Root Nodes.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TopNode">
            <summary>
            The top <see cref="T:Habanero.Faces.Base.ITreeNode"/> or first node shown in the <see cref="T:Habanero.Faces.Base.ITreeView"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.SelectedNode">
            <summary>
            The currently selected <see cref="T:Habanero.Faces.Base.ITreeNode"/> in the <see cref="T:Habanero.Faces.Base.ITreeView"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.SuppressDoubleClickEvent">
            <summary>
            When set to true will suppress the Double Click event on the control.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.TreeViewWin.TreeNodeWin">
            <summary>
             An implementation of <see cref="T:Habanero.Faces.Base.ITreeView"/> for Windows Forms.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.#ctor">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin.TreeNodeWin"/>.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.#ctor(System.String)">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin.TreeNodeWin"/> with the specified text.
            </summary>
            <param name="text">The label text of the new Tree node</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin.TreeNodeWin"/> with the specified text.
            </summary>
            <param name="controlFactory">The Control Factory to use to construct new nodes</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
             Constructs a new <see cref="T:Habanero.Faces.Win.TreeViewWin.TreeNodeWin"/> with the specified text.
            </summary>
            <param name="controlFactory">The Control Factory to use to construct new nodes</param>
            <param name="text">The label text of the new Tree node</param>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.Parent">
            <summary>
            The parent <see cref="T:Habanero.Faces.Base.ITreeNode"/> if one exists null if this is the Root Node.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.Nodes">
            <summary>
             The <see cref="T:Habanero.Faces.Base.ITreeNodeCollection"/> of <see cref="T:Habanero.Faces.Base.ITreeNode"/>'s that are children of this <see cref="T:Habanero.Faces.Base.ITreeNode"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.FirstNode">
            <summary>Gets the first child tree node in the tree node collection.</summary>
            <returns>The first child <see cref="T:Habanero.Faces.Base.ITreeNode"></see> in the <see cref="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.Nodes"></see> collection.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.LastNode">
            <summary>Gets the last child tree node.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeNode"></see> that represents the last child tree node.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.PrevNode">
            <summary>Gets the previous sibling tree node.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeNode"></see> that represents the previous sibling tree node.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.PrevVisibleNode">
            <summary>Gets the previous visible tree node.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeNode"></see> that represents the previous visible tree node.</returns>  
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.NextNode">
            <summary>Gets the next sibling tree node.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeNode"></see> that represents the next sibling tree node.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.NextVisibleNode">
            <summary>Gets the next visible tree node.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeNode"></see> that represents the next visible tree node.</returns>
            <filterpriority>1</filterpriority>        
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeWin.TreeView">
            <summary>Gets the parent tree view that the tree node is assigned to.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.ITreeView"></see> that represents the parent tree view that the tree node is assigned to, or null if the node has not been assigned to a tree view.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin">
            <summary>
             An implementation of <see cref="T:Habanero.Faces.Base.ITreeNodeCollection"/> for windows.
             This implements the wrapper pattern where the underlying windows TreeView control
              is merely wrapped by this control.
             this control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.#ctor(System.Windows.Forms.TreeNodeCollection,Habanero.Faces.Base.IControlFactory)">
            <summary>
             constructs a <see cref="T:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin"/>
            </summary>
            <param name="nodes">The underlying Nodes collection</param>
            <param name="controlFactory">Control Factory used to Create new nodes for this collection</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than zero. </exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or- <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.-or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />. </exception>
            <exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />. </param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" /> has a fixed size. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
            <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" /> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException"><paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />. </param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" /> has a fixed size. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" /> has a fixed size. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Add(Habanero.Faces.Base.ITreeNode)">
            <summary>
            Adds a new <paramref name="treeNode"/> to the collection of <see cref="T:Habanero.Faces.Base.ITreeNode"/>s
            </summary>
            <param name="treeNode">the <see cref="T:Habanero.Faces.Base.ITreeNode"/> that is being added to the collection</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Add(System.String)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text.
            </summary>
            <param name="text">The label text displayed by the TreeNode .</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Add(System.String,System.String)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text.
            </summary>
            <param name="name">The name of the node(used as the key).</param>
            <param name="text">The label text displayed by the TreeNode .</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Remove(Habanero.Faces.Base.ITreeNode)">
            <summary>
            Removes the specified tree view node.
            </summary>
            <param name="objTreeViewNode">Obj tree view node.</param>
        </member>
        <member name="M:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Count">
            <summary>
             The number of items in this collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList" /> is read-only. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.TreeViewWin.TreeNodeCollectionWin.Item(System.Int32)">
            <summary>
            Returns the item identified by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Habanero.Faces.Win.TextBoxMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a TextBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TextBoxMapperStrategyWin.AddKeyPressEventHandler(Habanero.Faces.Base.TextBoxMapper,Habanero.Base.IBOProp)">
            <summary>
            Adds key press event handlers that carry out actions like
            limiting the input of certain characters, depending on the type of the
            property
            </summary>
            <param name="mapper">The TextBox mapper</param>
            <param name="boProp">The property being mapped</param>
        </member>
        <member name="M:Habanero.Faces.Win.TextBoxMapperStrategyWin.IsValidCharacter(System.Char)">
            <summary>
            Indicates if the given character being typed is valid, based on the
            text already entered in the textbox.  For instance, if the property
            type is an integer, this method will return false for a non-numeric
            character (apart from a negative sign).
            </summary>
            <param name="character">The character being input</param>
            <returns>Returns true if valid</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxMapperStrategyWin.BoProp">
            <summary>
            Gets the BOProp being mapped through this control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxMapperStrategyWin.TextBoxControl">
            <summary>
            Gets the textbox control for which the strategy is applied
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ReadOnlyGridControlWin">
            <summary>
            Provides a combination of read-only grid, filter and buttons used to edit a
            collection of business objects.
            <br/>
            Adding, editing and deleting objects is done by clicking the available
            buttons in the button control (accessed through the Buttons property).
            By default, this uses of a popup form for editing of the object, as defined
            in the "form" element of the class definitions for that object.  You can
            override the editing controls using the BusinessObjectEditor/Creator/Deletor
            properties in this class.
            <br/>
            A filter control is placed above the grid and is used to filter which rows
            are shown.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.#ctor">
            <summary>
             Constructs a new instance of a <see cref="T:Habanero.Faces.Win.ReadOnlyGridControlWin"/>.
             This uses the <see cref="T:Habanero.Faces.Base.IControlFactory"/> from the <see cref="T:Habanero.Faces.Base.GlobalUIRegistry"/> to construct the control.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs a new instance of a <see cref="T:Habanero.Faces.Win.ReadOnlyGridControlWin"/>.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use to construct the control.</param>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.Initialise(Habanero.Base.IClassDef)">
            <summary>
            Initiliases the grid structure using the default UI class definition (implicitly named "default")
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.Initialise(Habanero.Base.IClassDef,System.String)">
            <summary>
            Initialises the grid structure using the specified UI class definition
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
            <param name="uiDefName">The UI definition with the given name</param>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.Initialise(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            Initialises the grid structure with a given UI definition
             </summary>
            <param name="classDef">The Classdef used to initialise the grid</param>
            <param name="gridDef">The <see cref="T:Habanero.BO.ClassDefinition.IUIGrid"/> that specifies the grid </param>
            <param name="uiDefName">The name of the <see cref="T:Habanero.BO.ClassDefinition.IUIGrid"/></param>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to display.  Loading of
            the collection needs to be done before it is assigned to the
            grid.  This method assumes a default UI definition is to be
            used, that is a 'ui' element without a 'name' attribute.
            Please use BusinessObjectCollectionProperty instead as I would like 
            to make this a private method.
            </summary>
            <param name="boCollection">The business object collection
            to be shown in the grid</param>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.Initialise">
            <summary>
            Initialises the grid without a ClassDef. This is used where the columns are set up manually.
            A typical case of when you would want to set the columns manually would be when the grid
            requires alternate columns, such as images to indicate the state of the object or buttons/links.
            The grid must already have at least one column added with the name "HABANERO_OBJECTID". This column is used
            to synchronise the grid with the business objects.
            </summary>
            <exception cref="T:Habanero.Faces.Base.GridBaseInitialiseException">Occurs where the columns have not
            already been defined for the grid</exception>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.GetBusinessObjectCollection">
            <summary>
             Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.Faces.Base.IGridControl"/>.
            </summary>
            <returns>Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.Faces.Base.IGridControl"/>.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridControlWin.RefreshFilter">
            <summary>
             Reapplies the current filter to the Grid.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.SelectedBusinessObject">
            <summary>
            Gets or sets the single selected business object (null if none are selected)
            denoted by where the current selected cell is
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ReadOnlyGridControlWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.Buttons">
            <summary>
            Gets the button control, which contains a set of default buttons for
            editing the objects and can be customised
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.BusinessObjectEditor">
            <summary>
            Gets and sets the business object editor used to edit the object when the edit button is clicked
            If no editor is set then the <see cref="T:Habanero.Faces.Base.DefaultBOEditor"/> is used.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.BusinessObjectCreator">
            <summary>
            Gets and sets the business object creator used to create the object when the add button is clicked.
            If no creator is set then the <see cref="T:Habanero.Faces.Base.DefaultBOCreator"/> is used.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.BusinessObjectDeletor">
            <summary>
            Gets and sets the business object deletor used to delete the object when the delete button is clicked
            If no deletor is set then the <see cref="T:Habanero.Faces.Base.DefaultBODeletor"/> is used.  The default delete button
            is hidden unless programmatically shown (using Buttons.ShowDefaultDeleteButton).
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.UiDefName">
            <summary>
            Gets and sets the UI definition used to initialise the grid structure (the UI name is indicated
            by the "name" attribute on the UI element in the class definitions
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.ClassDef">
            <summary>
            Gets and sets the class definition used to initialise the grid structure
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.FilterControl">
            <summary>
            Gets the filter control for the readonly grid, which is used to filter
            which rows are shown in the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.IsInitialised">
            <summary>
            Gets the value indicating whether one of the overloaded initialise
            methods been called for the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.FilterMode">
            <summary>
            Gets and sets the filter modes for the grid (i.e. filter or search).  See <see cref="T:Habanero.Base.FilterModes"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.Grid">
            <summary>
            Returns the grid object held. This property can be used to
            access a range of functionality for the grid
            (eg. myGridWithButtons.Grid.AddBusinessObject(...)).
            </summary>    
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.Habanero#Faces#Base#IGridControl#Grid">
            <summary>
            Returns the <see cref="T:Habanero.Faces.Base.IReadOnlyGrid"/> object held. This property can be used to
            access a range of functionality for the <see cref="T:Habanero.Faces.Base.IReadOnlyGrid"/>.
            </summary>    
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.OrderBy">
            <summary>
            Gets and sets the default order by clause used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search. If the grid is in FilterMode.Filter it is assumed that the 
            collection is already loaded in the required order.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.AdditionalSearchCriteria">
            <summary>
            Gets and sets the standard search criteria used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search or Filter. This search criteria will be appended with an AND to any search criteria returned
            by the FilterControl.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.Habanero#Faces#Base#IGridControl#Buttons">
            <summary>
            Gets the button control, which contains a set of default buttons for
            editing the objects and can be customised
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.DoubleClickEditsBusinessObject">
            <summary>
             Enable or disable the default double click handler for the grid where the <see cref="T:Habanero.Base.IBusinessObjectEditor"/>
             is used to edit the <see cref="T:Habanero.Base.IBusinessObject"/> represented by the row that was double clicked.
             If you want to implement a custom handler on double click, you should set this to false so that 
             the default handler does not interfere with your custom handler. 
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.AllowUsersToAddBO">
            <summary>
             Gets and sets whether the user can add Business objects via this control.
             Note_This method is implemented so as to support the interface but always returns False and the set always sets false.
               This is a readOnly Grid and it makes no sense.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.AllowUsersToDeleteBO">
            <summary>
            Gets and sets whether the user can Delete (<see cref="M:Habanero.Base.IBusinessObject.MarkForDelete"/>) <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.AllowUsersToEditBO">
            <summary>
            Gets and sets whether the user can edit <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            Note_This method is implemented so as to support the interface but always returns False and the set always sets false.
              This is a readOnly Grid and it makes no sense.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.ConfirmDeletion">
            <summary>
            Gets or sets a boolean value that determines whether to confirm
            deletion with the user when they have chosen to delete a row
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridControlWin.CheckUserConfirmsDeletionDelegate">
            <summary>
            Gets or sets the delegate that checks whether the user wants to delete selected rows.
            If <see cref="P:Habanero.Faces.Base.IBOSelectorAndEditor.ConfirmDeletion"/> is true and no specific <see cref="P:Habanero.Faces.Base.IBOSelectorAndEditor.CheckUserConfirmsDeletionDelegate"/> is set then
            a default <see cref="T:Habanero.Faces.Base.CheckUserConfirmsDeletion"/> is used.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.NumericUpDownWin">
            <summary>
            Represents a spin box (also known as an up-down control) that displays numeric values
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownWin.Habanero#Faces#Base#INumericUpDown#TextAlign">
            <summary>
            Gets or sets the alignment of text in the up-down control
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.FormExceptionNotifier">
            <summary>
            Provides a form that displays an exception to the user
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.Notify(System.Exception,System.String,System.String)">
            <summary>
            Displays a dialog with exception information to the user
            </summary>
            <param name="ex">The exception</param>
            <param name="furtherMessage">Additional error messages</param>
            <param name="title">The title</param>
        </member>
        <member name="P:Habanero.Faces.Win.FormExceptionNotifier.ExceptionMessage">
            <summary>
             The last exception logged by the exception notifier
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm">
            <summary>
            Provides a form to display the exception message, using a "More Detail"
            button that collapses or uncollapses the error detail panel
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.#ctor(System.Exception,System.String,System.String)">
            <summary>
            Constructor that sets up the error message form
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.GetErrorLabel(System.String)">
            <summary>
            Creates the red error label that appears at the top
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.GetSimpleMessage(System.String)">
            <summary>
            Creates the text box that shows the error summary at the top
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.SetFullDetailsPanel">
            <summary>
            Sets up the panel that shows the error details
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.OKButtonClickHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the event of the OK button being pressed on the
            exception form, which closes the form
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.MoreDetailClickHandler(System.Object,System.EventArgs)">
            <summary>
            Expands the form when the "More Details" button is clicked
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.ShowStackTraceClicked(System.Object,System.EventArgs)">
            <summary>
            Toggles the showing of the stack trace in the error details
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FormExceptionNotifier.CollapsibleExceptionNotifyForm.ResizeForm(System.Object,System.EventArgs)">
            <summary>
            Scales the components when the form is resized
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.EditableGridWin">
            <summary>
            Provides a grid on which the user can edit data and add new business objects directly.
            <br/>
            IMPORTANT: This grid does not provide any buttons or menus for users
            to save the changes they have made, and all changes will be lost if the form
            is closed and changes are not saved programmatically.  Either carry out a dirty check when the
            parent form is closed and take appropriate save action using SaveChanges(), or use an
            IEditableGridControl, which provides Save and Cancel buttons. 
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.#ctor">
            <summary>
             Constructs the <see cref="T:Habanero.Faces.Win.EditableGridWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.CreateDataSetProvider(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Creates a dataset provider that is applicable to this grid. For example, a readonly grid would
            return a read only datasetprovider, while an editable grid would return an editable one.
            </summary>
            <param name="col">The collection to create the datasetprovider for</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.RejectChanges">
            <summary>
            Restore the objects in the grid to their last saved state
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.SaveChanges">
            <summary>
            Saves the changes made to the data in the grid
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.ConfirmRowDeletion(System.Object,System.Windows.Forms.DataGridViewRowCancelEventArgs)">
            <summary>
            If deletion is to be confirmed, checks deletion with the user before continuing.
            This applies only to the default delete behaviour where a full row is selected
            by clicking on the column.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            A Microsoft-suggested override to catch key presses, since KeyPress does
            not work correctly on DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            A Microsoft-suggested override to catch key presses, since KeyPress does
            not work correctly on DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.DeleteKeyHandler">
            <summary>
            Carries out actions when the delete key on the keyboard is pressed
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.CellClickHandler(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Carries out additional actions when a cell is clicked.  Specifically, if
            a combobox cell is clicked, the cell goes into edit mode immediately.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridWin.CheckIfComboBoxShouldSetToEditMode(System.Int32,System.Int32)">
            <summary>
            Checks whether this is a comboboxcolumn and whether it should
            begin edit immediately (to circumvent the pain of having to click
            a cell multiple times to edit the value).  This method is typically
            called by the cell click handler.
            </summary>
            <remarks>
            This method was extracted from the handler in order to make testing
            possible, since calling BeginEdit at testing time causes an STA thread
            error.
            </remarks>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridWin.ComboBoxClickOnce">
            <summary>
            Gets or sets whether clicking on a ComboBox cell causes the drop-down to
            appear immediately.  Set this to false if the user should click twice
            (first to select, then to edit), which is the default behaviour.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridWin.DeleteKeyBehaviour">
            <summary>
            Indicates what action should be taken when a selection of
            cells is selected and the Delete key is pressed.
            This has no correlation to how DataGridView handles the
            Delete key when the full row has been selected.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.BOGridAndEditorControlWin">
            <summary>
             Control For Win that displays a collection of a Business Object along side an editor/creator panel.
             The collection of business objects can be shown using any selector control e.g. an <see cref="T:Habanero.Faces.Base.IEditableGridControl"/>,
               <see cref="T:Habanero.Faces.Base.IGridControl"/> etc.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Base.IClassDef,System.String)">
            <summary>
             Constructor for the <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="classDef"></param>
            <param name="uiDefName"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBOEditorControl)">
            <summary>
             Constructor for the <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="iboEditorControl"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBOEditorControl,Habanero.Base.IClassDef,System.String)">
            <summary>
             Constructor for the <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="iboEditorControl"></param>
            <param name="classDef"></param>
            <param name="gridUiDefName"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.GetGridWidthToFitColumns(Habanero.Faces.Base.IGridBase)">
            <summary>
             Returns the Total width of the Selector. <see cref="T:Habanero.Faces.Base.IGridBase"/>. This is used so that the 
               Selector and BOEditor can be layed out.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.CheckRowSelectionCanChange">
            <summary>
            Using the RowValidating event did not work as expected, so this method provides
            a way to check whether the grid selection should be forced back to the previous selection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.RefreshGrid">
            <summary>
             Refreshes the Selector control (i.e. the 
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.AddGridSelectionChangedEvent">
            <summary>
             Adds the <see cref="M:Habanero.Faces.Win.BOGridAndEditorControlWin.GridSelectionChanged(System.Object,System.EventArgs)"/> Event Handler to the <see cref="E:Habanero.Faces.Base.IDataGridView.SelectionChanged"/> event
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.RemoveGridSelectionChangedEvent">
            <summary>
             Removes the <see cref="M:Habanero.Faces.Win.BOGridAndEditorControlWin.GridSelectionChanged(System.Object,System.EventArgs)"/> Event Handler from the <see cref="E:Habanero.Faces.Base.IDataGridView.SelectionChanged"/> event
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin.NewButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Deliberately adds BO to the grid's collection because current habanero model only
            adds BO to grid when it is saved.  This causes a problem when you call col.CreateBO(), since
            it adds the BO twice and throws a duplicate key exception.
            </summary>a
        </member>
        <member name="E:Habanero.Faces.Win.BOGridAndEditorControlWin.BusinessObjectSelected">
            <summary>
            Event that is raised when a business objects is selected.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.BusinessObjectCollection">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.GridControl">
            <summary>
            Returns the <see cref="T:Habanero.Faces.Base.IGridControl"/> that is being used along side of the <see cref="P:Habanero.Faces.Base.IBOGridAndEditorControl.IBOEditorControl"/>
             to provide bo editing behaviour.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.IBOEditorControl">
            <summary>
            The <see cref="P:Habanero.Faces.Base.IBOGridAndEditorControl.IBOEditorControl"/> that is being used to 
            edit the <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.ButtonGroupControl">
            <summary>
            The <see cref="T:Habanero.Faces.Base.IButtonGroupControl"/> that is has the individual buttons that
              are shown at the bottom of this control.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.Habanero#Faces#Base#IBOGridAndEditorControl#CurrentBusinessObject">
            <summary>
            Method to create a new Business Object that is part of the collection.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin.CurrentBusinessObject">
            <summary>
             Gets and Sets the currently selected business object
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.BOGridAndEditorControlWin`1">
            <summary>
            Provides a generic control with a grid on the left, a BO control on the right and buttons at the bottom right.
            This is used by a number of screens in Firestarter, but differs from typical Habanero controls in the fact that
            there is no Save button - all changes go to the InMemory database.
            TODO: This uses ReadOnlyGridControl due to some flaw in ReadOnlyGrid. Look at switching back
            to the grid in the future.  What happens when you double-click?
            
            TODO:
            - grid caret moves all over, even though selected row is correct
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBOEditorControl)">
            <summary>
              Constructor for <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="iboEditorControl"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.IBOEditorControl,System.String)">
            <summary>
              Constructor for <see cref="T:Habanero.Faces.Win.BOGridAndEditorControlWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="iboEditorControl"></param>
            <param name="gridUiDefName"></param>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.GetGridWidthToFitColumns(Habanero.Faces.Base.IGridBase)">
            <summary>
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.CheckRowSelectionCanChange">
            <summary>
            Using the RowValidating event did not work as expected, so this method provides
            a way to check whether the grid selection should be forced back to the previous selection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.RefreshGrid">
            <summary>
             Refreshes the Grid. I.e. Reloads the collection from the Datastore
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.AddGridSelectionChangedEvent">
            <summary>
             Adds the <see cref="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.GridSelectionChanged(System.Object,System.EventArgs)"/> Event Handler to the <see cref="E:Habanero.Faces.Base.IDataGridView.SelectionChanged"/> event
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.RemoveGridSelectionChangedEvent">
            <summary>
             Removes the <see cref="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.GridSelectionChanged(System.Object,System.EventArgs)"/> Event Handler from the <see cref="E:Habanero.Faces.Base.IDataGridView.SelectionChanged"/> event
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOGridAndEditorControlWin`1.NewButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Deliberately adds BO to the grid's collection because current habanero model only
            adds BO to grid when it is saved.  This causes a problem when you call col.CreateBO(), since
            it adds the BO twice and throws a duplicate key exception.
            </summary>a
        </member>
        <member name="E:Habanero.Faces.Win.BOGridAndEditorControlWin`1.BusinessObjectSelected">
            <summary>
            Event for when the Business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.BusinessObjectCollection">
            <summary>
            Sets the business object collection to populate the grid.  If the grid
            needs to be cleared, set an empty collection rather than setting to null.
            Until you set a collection, the controls are disabled, since any given
            collection needs to be provided by a suitable context.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.GridControl">
            <summary>
            Returns the <see cref="T:Habanero.Faces.Base.IGridControl"/> that is being used along side of the <see cref="P:Habanero.Faces.Base.IBOGridAndEditorControl.IBOEditorControl"/>
             to provide bo editing behaviour.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.IBOEditorControl">
            <summary>
            The <see cref="P:Habanero.Faces.Base.IBOGridAndEditorControl.IBOEditorControl"/> that is being used to 
            edit the <see cref="T:Habanero.Base.IBusinessObject"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.ButtonGroupControl">
            <summary>
             Returns the <see cref="T:Habanero.Faces.Base.IButtonGroupControl"/> for the 
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.Habanero#Faces#Base#IBOGridAndEditorControl#CurrentBusinessObject">
            <summary>
            Method to create a new Business Object that is part of the collection.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOGridAndEditorControlWin`1.CurrentBusinessObject">
            <summary>
             The Current Business Object that is selected in the grid.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DateTimePickerWin">
            <summary>
            Represents a DateTimePicker control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.DateTimePickerWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.DateTimePicker.ValueChanged" /> event.
            </summary>
            
            <param name="eventargs">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            
            <param name="eventargs">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.
            </summary>
            
            <param name="eventargs">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.
            </summary>
            
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerWin.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IDateTimePicker#Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IDateTimePicker#Checked">
            <summary>
            Gets or sets a value indicating whether the Value property has
            been set with a valid date/time value and the displayed value is able to be updated
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IDateTimePicker#ValueChanged">
            <summary>
            Occurs when the Value property changes
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.ValueOrNull">
            <summary>
            Gets or sets the date/time value assigned to the control, but returns
            null if there is no date set in the picker
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.NullDisplayValue">
            <summary>
             The text that will be displayed when the Value is null
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerWin.Habanero#Faces#Base#IDateTimePicker#Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
            <returns>One of the <see cref="T:Habanero.Faces.Base.DateTimePickerFormat"></see> values. The default is <see cref="F:Habanero.Faces.Base.DateTimePickerFormat.Long"></see>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:Habanero.Faces.Base.DateTimePickerFormat"></see> values. </exception>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxAutoCompleteModeWin.GetAutoCompleteMode(System.Windows.Forms.AutoCompleteMode)">
            <summary>
             Gets the Habanero AutoCompleteMode equivalent to the provided System.Windows.AutoCompleteMode
            </summary>
            <param name="autoCompleteMode">A System.Windows.Forms AutoCompleteMode.</param>
            <returns>The equivalent Habanero AutoCompleteMode.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxAutoCompleteModeWin.GetAutoCompleteMode(Habanero.Faces.Base.AutoCompleteMode)">
            <summary>
             Gets the System.Windows.Forms AutoCompleteMode equivalent to the provided Habanero AutoCompleteMode
            </summary>
            <param name="autoCompleteMode">A Habanero  AutoCompleteMode.</param>
            <returns>The equivalent System.Windows.Forms  AutoCompleteMode.</returns>
        </member>
        <member name="T:Habanero.Faces.Win.ExtendedTextBoxWin">
            <summary>
            A Text Box with a Search Button. This is typically used for cases where there is a large list of potential items and it is 
            not appropriate to use a ComboBox for selecting the items.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ExtendedTextBoxWin.#ctor">
            <summary>
            Constructor with an unspecified Control Factory.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ExtendedTextBoxWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor with a specified Control Factory
            </summary>
            <param name="factory"></param>
        </member>
        <member name="P:Habanero.Faces.Win.ExtendedTextBoxWin.Button">
            <summary>
             The Extended Button typically a search button.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ExtendedTextBoxWin.TextBox">
            <summary>
            The Text box in which the result of the search are displayed.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ExtendedTextBoxWin.Text">
            <summary>
             Gets or sets the text associated with this control.           
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MainEditorPanelWin">
            <summary>
            This is a Main Editor Panel that consists of a Header control that can be styled and takes an Icon and a Title.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainEditorPanelWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.MainEditorPanelWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="P:Habanero.Faces.Win.MainEditorPanelWin.MainTitleIconControl">
            <summary>
            The Control that is positioned at the top of this panel that can be used to set an icon and title for the
             information being displayed on the MainEditorPanelWin
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MainEditorPanelWin.EditorPanel">
            <summary>
            The Panel in which the control being set is placed in.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsibleMenuBuilderWin">
            <summary>
            Builds an Outlook style Menu based on a Standard <see cref="T:Habanero.Faces.Base.HabaneroMenu"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuBuilderWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.#ctor">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuBuilderWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.BuildMainMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
            Builds the Main Menu based on a <paramref name="habaneroMenu" />
            </summary>
            <param name="habaneroMenu"></param>
            <returns>
            </returns>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.BuildMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
            Builds a Menu for Win.
            </summary>
            <param name="habaneroMenu"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.CreateLeafMenuItems(Habanero.Faces.Base.HabaneroMenu,Habanero.Faces.Base.IMenuItem)">
            <summary>
            Creates the Leaf Items defined by the <see cref="T:Habanero.Faces.Base.HabaneroMenu"/> and addts them 
            to the <paramref name="menuItem"/>'s MenuItems Collection.
            </summary>
            <param name="habaneroMenu">The definition of the Menu</param>
            <param name="menuItem">The Menu Item that the MenuItems will be added to.</param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuBuilderWin.BuildSubMenu(Habanero.Faces.Base.HabaneroMenu,Habanero.Faces.Base.IMenuItemCollection)">
            <summary>
            Builds the Sub Menu based on the <paramref name="habaneroMenu"/> definition.
            The Sub Menu items created are added to the menuItems Collection <see cref="T:Habanero.Faces.Base.IMenuItemCollection"/>
            </summary>
            <param name="habaneroMenu">The definition of the Sub Menu</param>
            <param name="menuItems">The collection to which the Sub Menu items are added</param>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuBuilderWin.ControlFactory">
            <summary>
            Returns the control factory being used to create the Menu and the MenuItems
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsibleSubMenuItemWin">
            <summary>
            This is an individual sub menu item on an Collapsible Menu. i.e. this is the control that when clicked,
             it will expand and show the Menu items underneath it.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsiblePanelWin">
            <summary>
            Implements <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> for Windows Forms.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Creates an <see cref="T:Habanero.Faces.Win.CollapsiblePanelWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsiblePanelWin.FireUncollapsedEvent">
            <summary>
             Fires the Uncollapsed event this is used by the <see cref="T:Habanero.Faces.Base.CollapsiblePanelManager"/>
               and is not expected to be used outside of this context.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.CollapsiblePanelWin.Uncollapsed">
            <summary>
            Event that is raised when this panel is uncollapsed.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.ExpandedHeight">
            <summary>
            Returns the Height required by the Panel when it is Expanded.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.CollapseButton">
            <summary>
            Returns the button that is available at the top of the <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/> that when
            clicked collapses or Expands the <see cref="T:Habanero.Faces.Base.IPanel"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.ContentControl">
            <summary>
            Gets and Sets the <see cref="T:Habanero.Faces.Base.IControlHabanero"/> that is placed on the Panel.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.PinLabel">
            <summary>
            Returns the PinLabel <see cref="T:Habanero.Faces.Base.ILabel"/> so that the Image can be changed on it for styling.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.Collapsed">
            <summary>
             Gets and Sets whether the <see cref="T:Habanero.Faces.Base.IPanel"/> is collapsed or expanded.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsiblePanelWin.Pinned">
            <summary>
            Gets and Sets whether the Panel is Pinned or not.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleSubMenuItemWin.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleSubMenuItemWin"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="name"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleSubMenuItemWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.HabaneroMenu.Item)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleSubMenuItemWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleSubMenuItemWin.PerformClick">
            <summary>
            Performs the Click event for this <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleSubMenuItemWin.DoClick">
            <summary>
            This actually executes the Code when PerformClick is selected <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            In this case it expands or collapses the Menu.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleSubMenuItemWin.MenuItems">
            <summary>
            The Child Menu items for this <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsibleMenuItemWin">
            <summary>
            This is an individual item on an Collapsible Menu. i.e. this is the control that when clicked.
            it opens the editor control in the <see cref="T:Habanero.Faces.Win.MainEditorPanelWin"/>
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ButtonWin">
            <summary>
            Represents a button control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ButtonWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemWin.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin"/> with a name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemWin.#ctor(Habanero.Faces.Base.HabaneroMenu.Item)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin"/> for a habaneroMenuItem.
            </summary>
            <param name="habaneroMenuItem"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Faces.Base.HabaneroMenu.Item)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin"/> for a habaneroMenuItem.
            </summary>
            <param name="controlFactory"></param>
            <param name="habaneroMenuItem"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemWin.Habanero#Faces#Base#IMenuItem#PerformClick">
            <summary>
            Performs the Click event for this <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemWin.DoClick">
            <summary>
            This actually executes the Code when PerformClick is selected <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuItemWin.MenuItems">
            <summary>
                        The Child Menu items for this <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsibleMenuWin">
            <summary>
            The Collapsible Menu is essentially a <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/>
            that has Collapsible Panels (See <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>) placed inside of it.
            The Collapsible Panels have menu Items (Leaf menu Items) which when clicked will
            perform the Doclick of the Habanero Menu Item.
            The CollapsibleMenu is built from a Habanero Menu (see <see cref="T:Habanero.Faces.Base.HabaneroMenu"/>) using
             the <see cref="T:Habanero.Faces.Win.CollapsibleMenuBuilderWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.#ctor">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.CollapsibleMenuWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.#ctor(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.CollapsibleMenuWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero)">
             <summary>
            This method sets up the form so that the menu is displayed and the form is able to 
            display the controls loaded when the menu item is clicked.
             </summary>
             <param name="form">The form to set up with the menu</param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.DockInForm(Habanero.Faces.Base.IControlHabanero,System.Int32)">
             <summary>
            This method sets up the form so that the menu is displayed and the form is able to 
            display the controls loaded when the menu item is clicked.
             </summary>
             <param name="form">The form to set up with the menu</param>
             <param name="menuWidth">The width of the menu - configurable to so that each application can set its menu width</param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.PerformClick">
            <summary>
            Performs the Click event for this <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuWin.DoClick">
            <summary>
            This actually executes the Code when PerformClick is selected <see cref="T:Habanero.Faces.Base.IMenuItem" />.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuWin.MenuItems">
            <summary>
                         The collection of menu items for this menu
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin">
            <summary>
            A collection of <see cref="T:Habanero.Faces.Win.CollapsibleMenuItemWin"/>s used by the CollapsibleMenu.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin.#ctor(Habanero.Faces.Base.IMenuItem)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin"/>
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin.Add(Habanero.Faces.Base.IMenuItem)">
            <summary>
            Adds a Menu item to the <see cref="T:Habanero.Faces.Base.IMenuItemCollection" />.
            </summary>
            <param name="menuItem"></param>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin.Count">
             <summary>
            The number of <see cref="T:Habanero.Faces.Base.IMenuItem"/>s in this <see cref="T:Habanero.Faces.Base.IMenuItemCollection"/>
             </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin.OwnerMenuItem">
            <summary>
            The Menu Item that owns this colleciton of Menu Items.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CollapsibleMenuItemCollectionWin.Item(System.Int32)">
            <summary>
            Returns the Actual Menu item identified by the index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Habanero.Faces.Win.FilterControlWin">
            <summary>
            Manages a group of filter controls that create a filter clause used to limit
            which rows of data to show on a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.FilterControlWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddStringFilterTextBox(System.String,System.String)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            a string-value column will be filtered on.  This uses a "like"
            operator and accepts any strings that contain the provided clause.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddStringFilterTextBox(System.String,System.String,Habanero.Base.FilterClauseOperator)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            a string-value column will be filtered on.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="filterClauseOperator">The operator to use for the filter clause</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Adds a TextBox filter in which users can specify text that
            multiple string-value columns will be filtered on.  This uses a "like"
            operator and accepts any strings that contain the provided clause.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyNames">The business object propertys on which to filter</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddMultiplePropStringTextBox(System.String,System.Collections.Generic.List{System.String},Habanero.Base.FilterClauseOperator)">
            <summary>
            Adds a TextBox filter in which users can specify text that
            multiple string-value columns will be filtered on.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyNames">The business object propertys on which to filter</param>
            <param name="filterClauseOperator">The operator to use for the filter clause</param>
            <returns>Returns the new TextBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.GetFilterClause">
            <summary>
            Returns the filter clause as a composite of all the specific
            clauses in each filter control in the set
            </summary>
            <returns>Returns the filter clause</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddStringFilterComboBox(System.String,System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
            Adds a ComboBox filter control
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="options">The collection of items used to fill the combo box.</param>
            <param name="strictMatch">Whether to filter the DataGridView column on a strict match or using a LIKE operator</param>
            <returns>Returns the new ComboBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddEnumFilterComboBox(System.String,System.String,System.Type)">
            <summary>
             Adds a Filter Combo box for filtering an enum data type.
            </summary>
             <param name="labelText">The label to appear before the control</param>
             <param name="propertyName">The business object property on which to filter</param>
            <param name="enumType">The Type being showen in the ComboBox</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddBooleanFilterComboBox(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a ComboBox filter that displays only rows whose boolean value
            matches the true/false or null value in the ComboBox. The column (propertyName) of data must
            have "true" or "false" as its values (boolean database fields are
            usually converted to true/false string values by the Habanero
            object manager).
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="defaultValue">Whether the CheckBox is checked</param>
            <returns>Returns the new CheckBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddBooleanFilterCheckBox(System.String,System.String,System.Boolean)">
            <summary>
            Adds a CheckBox filter that displays only rows whose boolean value
            matches the on-off state of the CheckBox. The column of data must
            have "true" or "false" as its values (boolean database fields are
            usually converted to true/false string values by the Habanero
            object manager).
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="defaultValue">Whether the CheckBox is checked</param>
            <returns>Returns the new CheckBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDateFilterDateTimePicker(System.String,System.String,System.Nullable{System.DateTime},Habanero.Base.FilterClauseOperator,System.Boolean)">
            <summary>
            Adds a date-time picker that filters a date column on the date
            chosen by the user.  The given operator compares the chosen date
            with the date shown in the given column name.
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="propertyName">The business object property on which to filter</param>
            <param name="defaultValue">The default date or null</param>
            <param name="filterClauseOperator">The operator used to compare
            with the date chosen by the user.  The chosen date is on the
            right side of the equation.</param>
            <param name="nullable">Whether the datetime picker allows null values</param>
            <returns>Returns the new DateTimePicker added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.ApplyFilter">
            <summary>
            Applies the filter that has been captured.
            This allows an external control (e.g. another button click) to be used as the event that causes the filter to fire.
            Typically used when the filter controls are being set manually.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.GetChildControl(System.String)">
            <summary>
            Returns the filter control used to filter the column for the given property name
            </summary>
            <param name="propertyName">The property name on the business object</param>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.ClearFilters">
            <summary>
            Clears all the values from the filter and calls <see cref="M:Habanero.Faces.Base.IFilterControl.ApplyFilter"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.Clear_Filter_Click(System.Object,System.EventArgs)">
            <summary>
            Clears all the values from the filter and calls <see cref="M:Habanero.Faces.Base.IFilterControl.ApplyFilter"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDateRangeFilterComboBox(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a DateRangeComboBox filter which provides common date ranges such as "Today" or "This Year",
            so that the grid will only show rows having a date property in the given range
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="columnName">The business object property on which to filter</param>
            <param name="includeStartDate">Includes all dates that match the start date exactly</param>
            <param name="includeEndDate">Includes all dates that match the end date exactly</param>
            <returns>Returns the new DateRangeComboBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDateRangeFilterComboBox(System.String,System.String,System.Collections.Generic.List{Habanero.Base.Util.DateRangeOptions},System.Boolean,System.Boolean)">
            <summary>
            Adds a DateRangeComboBox filter which provides common date ranges such as "Today" or "This Year",
            so that the grid will only show rows having a date property in the given range
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="columnName">The business object property on which to filter</param>
            <param name="options">Provides a specific set of date range options to show</param>
            <param name="includeStartDate">Includes all dates that match the start date exactly</param>
            <param name="includeEndDate">Includes all dates that match the end date exactly</param>
            <returns>Returns the new DateRangeComboBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDateRangeFilterComboBox(System.String,System.String)">
            <summary>
            Adds a DateRangeComboBox filter which provides common date ranges such as "Today" or "This Year",
            so that the grid will only show rows having a date property in the given range.<br/>
            Includes all dates that match the start date exactly.<br/>
            Includes all dates that match the end date exactly.<br/>
            </summary>
            <param name="labelText">The label to appear before the control</param>
            <param name="columnName">The business object property on which to filter</param>
            <returns>Returns the new DateRangeComboBox added</returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddCustomFilter(System.String,System.String,Habanero.Faces.Base.ICustomFilter)">
            <summary>
             Adds a custom filter which allows filtering using an ICustomFilter 
            </summary>
            <param name="labelText">The Label to appear before the control</param>
            <param name="propertyName">The property of the Business Object to filter</param>
            <param name="customFilter">The custom filter</param>
            <returns>Returns the new Custom Filter Control </returns>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddCustomFilter(System.String,Habanero.Faces.Base.ICustomFilter)">
            <summary>
             Adds a custom filter which allows filtering using an ICustomFilter 
            </summary>
            <param name="labelText">The Label to appear before the control</param>
            <param name="customFilter">The custom filter</param>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddStaticStringFilterClause(System.String,Habanero.Base.FilterClauseOperator,System.String)">
            <summary>
             Adds a static string filter <see cref="T:Habanero.Faces.Base.StringStaticFilter"/> to the Filter Control.
             This allows the developer to set a filter that is always applied and is not modifiable by or visible to the end user.
            </summary>
            <param name="propertyName"></param>
            <param name="filterClauseOperator"></param>
            <param name="filterValue"></param>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.RemoveDefaultFilterClickEvent">
            <summary>
            Removes the default Click Event. 
            Enables the developer to add custom functionality on the button click 
            before the filter or search happens.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDefaultFilterClickEvent">
            <summary>
            Adds the default Click Event. 
            Enables the developer to add the default functionality back on the button click 
            if previously removed.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.RemoveDefaultClearClickEvent">
            <summary>
            Removes the default Click Event. 
            Enables the developer to add custom functionality on the button click 
            before the Clear or search happens.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.FilterControlWin.AddDefaultClearClickEvent">
            <summary>
            Adds the default Click Event. 
            Enables the developer to add the default functionality back on the button click 
            if previously removed.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.FilterControlWin.Filter">
            <summary>
            The event that is fired when the filter is ready so that another control e.g. a grid can be filtered.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.HeaderText">
            <summary>
            The header text that will be set above the filter.  Defaults to 'Filter'.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.CountOfFilters">
            <summary>
            The number of controls used for filtering that are on the filter control. <see cref="P:Habanero.Faces.Base.IFilterControl.FilterControls"/>
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.FilterButton">
            <summary>
            Returns the filter button that when clicked applies the filter
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.FilterGroupBox">
            <summary>
            The Group box that surrounds the Filter Controls
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.ClearButton">
            <summary>
            Returns the clear button that when clicked clears the filter
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.FilterMode">
            <summary>
            Gets and sets the FilterMode <see cref="T:Habanero.Base.FilterModes"/>, which determines the
            behaviour of the filter control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.FilterControls">
            <summary>
            Gets the collection of individual filters
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.LayoutManager">
            <summary>
            Returns the layout manager used to lay the controls out on the filter control panel.
            The default layout manager is the FlowLayoutManager.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.FilterControlWin.FilterPanel">
            <summary>
            Returns the panel onto which the filter controls will be placed
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ErrorDescriptionForm">
            <summary>
             A form that allows the user to capture additional information about what happened when the error occured and to
              send this to the relevant person.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ErrorDescriptionForm.#ctor">
            <summary>
             A constructor for the <see cref="T:Habanero.Faces.Win.ErrorDescriptionForm"/>
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ErrorDescriptionForm.ErrorDescriptionFormClosing">
            <summary>
            Event raised when this form is due to close.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ErrorDescriptionForm.ErrorDescriptionTextBox">
            <summary>
             Returns the text box that contains the error description.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DateTimePickerControllerWin">
            <summary>
            Provides utilities to control how a DateTimePicker appears and behaves
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerControllerWin.#ctor(System.Windows.Forms.Control)">
            <summary>
             Initialises a new instance of a DateTimePickerController.
            </summary>
            <param name="dateTimePicker">The DateTimePicker control(can be any implementation)</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerControllerWin.Finalize">
            <summary>
            Cleans up all events etc on the DateTimePicker.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerControllerWin.DateTimePicker">
            <summary>
            Gets the DateTimePicker control being controlled
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerControllerWin.NullDisplayValue">
            <summary>
            Gets and sets the text that will be displayed when the Value is null
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateTimePickerControllerWin.Value">
            <summary>
            Gets and sets the Value represented by the DateTimePicker
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.DateTimePickerControllerWin.ValueChanged">
            <summary>
            Occurs when the <see cref="P:Habanero.Faces.Win.DateTimePickerControllerWin.Value"/> property changes.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.BusinessObjectPanelWin`1">
            <summary>
            Represents a panel containing a PanelInfo used to edit a single business object.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BusinessObjectPanelWin`1.#ctor(Habanero.Faces.Base.IControlFactory,System.String)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.BusinessObjectPanelWin`1"/>
            </summary>
            <param name="controlFactory"></param>
            <param name="uiDefName"></param>
        </member>
        <member name="P:Habanero.Faces.Win.BusinessObjectPanelWin`1.Habanero#Faces#Base#IBusinessObjectControl#BusinessObject">
            <summary>
            Gets or sets the business object being represented
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BusinessObjectPanelWin`1.BusinessObject">
            <summary>
            Gets or sets the business object being represented
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BusinessObjectPanelWin`1.PanelInfo">
            <summary>
            Gets and sets the PanelInfo object created by the control
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin">
            <summary>
            Hosts a collection of DataGridViewCheckBoxCell objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin.#ctor(System.Windows.Forms.DataGridViewCheckBoxColumn)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin"/>
            </summary>
            <param name="dataGridViewColumn"></param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin.FalseValue">
            <summary>Gets or sets the underlying value corresponding to a cell value of false, which appears as an unchecked box.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cells in this column 
            will treat as a false value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin.IndeterminateValue">
            <summary>Gets or sets the underlying value corresponding to an indeterminate or null cell value, 
            which appears as a disabled checkbox.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cells in this column 
            will treat as an indeterminate value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the CellTemplate property is null. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin.ThreeState">
            <summary>Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.</summary>
            <returns>true if the hosted DataGridViewCheckBoxCell" objects are able to have a third, 
            indeterminate, state; otherwise, false. The default is false.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the DataGridViewCheckBoxColumn.CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewCheckBoxColumnWin.TrueValue">
            <summary>Gets or sets the underlying value corresponding to a cell value of true, which appears as a checked box.</summary>
            <returns>An <see cref="T:System.Object"></see> representing a value that the cell will treat as a true value. The default is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value of the DataGridViewCheckBoxColumn.CellTemplate property is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.ComboBoxSelectorWin">
            <summary>
            This is a control that can be placed ona a form.
            Provides an implementation of <see cref="T:Habanero.Faces.Base.IBOComboBoxSelector"/> that is specialised for showing a collection of 
            Business Objects (<see cref="T:Habanero.Base.IBusinessObjectCollection"/>) in a <see cref="T:Habanero.Faces.Base.IComboBox"/> and allowing the user to select one.
            This Control works in conjunction with the <see cref="T:Habanero.Faces.Base.ComboBoxCollectionSelector"/>.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ComboBoxWin">
            <summary>
            Represents a ComboBox control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.#ctor">
            <summary>
             Constructor for ComboBoxWin
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Items">
            <summary>
            Gets an object representing the collection of the items
            contained in this ComboBox
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Habanero#Faces#Base#IComboBox#SelectedItem">
            <summary>
            Gets or sets currently selected item in the ComboBox
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Habanero#Faces#Base#IListControl#SelectedValue">
            <summary>
            Gets or sets the value of the member property specified by
            the ValueMember property
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin">
            <summary>
            Represents the collection of items in a ComboBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Add(System.Object)">
            <summary>
            Adds an item to the list of items for a ComboBox
            </summary>
            <param name="item">An object representing the item to add to the collection</param>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Remove(System.Object)">
            <summary>
            Removes the specified item from the ComboBox
            </summary>
            <param name="item">The System.Object to remove from the list</param>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Clear">
            <summary>
            Removes all items from the ComboBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Contains(System.Object)">
            <summary>
            Determines if the specified item is located within the collection
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>true if the item is located within the collection; otherwise, false</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.IndexOf(System.Object)">
            <summary>
            Retrieves the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>The zero-based index where the item is
            located within the collection; otherwise, -1</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the item is inserted</param>
            <param name="item">An object representing the item to insert.</param>
            <exception cref="T:System.ArgumentNullException">The item was null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index was less than zero.-or- The index was greater than the count of items in the collection.</exception>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxWin.ComboBoxObjectCollectionWin.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index within the collection
            </summary>
            <param name="index">The index of the item in the collection to retrieve</param>
            <returns>An object representing the item located at the
            specified index within the collection</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxSelectorWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ComboBoxSelectorWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxSelectorWin.#ctor">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ComboBoxSelectorWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxSelectorWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxSelectorWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.
            The default UI definition will be used, that is a 'ui' element 
            without a 'name' attribute.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ComboBoxSelectorWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.ComboBox">
            <summary>
             Returns the Underlying ComboBoxControl that is used by this selector
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ComboBoxSelectorWin.PreserveSelectedItem">
            <summary>
             Gets or sets whether the current <see cref="!:IBOColSelectorControl.SelectedBusinessObject">SelectedBusinessObject</see> should be preserved in the selector when the 
             <see cref="!:IBOColSelectorControl.BusinessObjectCollection">BusinessObjectCollection</see> 
             is changed to a new collection which contains the current <see cref="!:IBOColSelectorControl.SelectedBusinessObject">SelectedBusinessObject</see>.
             If the <see cref="!:IBOColSelectorControl.SelectedBusinessObject">SelectedBusinessObject</see> doesn't exist in the new collection then the
             <see cref="!:IBOColSelectorControl.SelectedBusinessObject">SelectedBusinessObject</see> is set to null.
             If the current <see cref="!:IBOColSelectorControl.SelectedBusinessObject">SelectedBusinessObject</see> is null then this will also be preserved.
             This overrides the <see cref="!:IBOColSelectorControl.AutoSelectFirstItem">AutoSelectFirstItem</see> property.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ComboBoxDefaultMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a lookup ComboBox
            depending on the environment.
            For Windows this provides the interaction where the Business Object is 
            updates as soon as a new item is selected from the Combo Box.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxDefaultMapperStrategyWin.RemoveCurrentHandlers(Habanero.Faces.Base.IComboBoxMapper)">
            <summary>
            Removes event handlers previously assigned to the ComboBox
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxDefaultMapperStrategyWin.AddHandlers(Habanero.Faces.Base.IComboBoxMapper)">
            <summary>
            Adds event handlers to the ComboBox that are suitable for the UI environment
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="T:Habanero.Faces.Win.ProgressBarWin">
            <summary>
            Represents a progress bar control.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ProgressBarWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.ProgressBarWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ProgressBarWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.GroupBoxGroupControlWin">
            <summary>
            Represents a Windows control that displays a frame around
            a group of controls with an optional caption
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.GroupBoxWin">
            <summary>
            Represents a Windows control that displays a frame around
            a group of controls with an optional caption
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GroupBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.GroupBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.GroupBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GroupBoxGroupControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.GroupBoxGroupControlWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.GroupBoxGroupControlWin.AddControl(Habanero.Faces.Base.IControlHabanero,System.String,System.Int32,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.Faces.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in the appropriate Child Control Type.
            </summary>
            <param name="contentControl">The control that is being placed as a child within this control. The content control could be 
             a Panel of <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>s or any other child control</param>
            <param name="headingText">The heading text that will be shown as the Header for this Group e.g. For a <see cref="T:Habanero.Faces.Base.ITabControl"/>
              this will be the Text shown in the Tab for a <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/> this will be the text shown
              on the Collapse Panel and for an <see cref="T:Habanero.Faces.Base.IGroupBox"/> this will be the title of the Group Box.</param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with any other spacing required will be used as the minimum height for the ChildControlCreated</param>
            <param name="minimumControlWidth">The minimum width that the <paramref name="contentControl"/> can be</param>
            <returns></returns>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewDateTimeColumnWin">
            <summary>
            Hosts a collection of cells that support a DateTimePicker
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewDateTimeColumnWin.#ctor(Habanero.Faces.Win.DataGridViewDateTimeColumn)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.DataGridViewDateTimeColumnWin"/>
            </summary>
            <param name="dataGridViewColumn"></param>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewDateTimeColumn">
            <summary>
            Implements a column of cells that support a DateTimePicker
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewDateTimeColumn.#ctor">
            <summary>
            Constructor to initialise a new column
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewDateTimeColumn.CellTemplate">
            <summary>
            Gets and sets the cell template
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewDateTimeColumn.SortMode">
            <summary>Gets or sets the sort mode for the column.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.DataGridViewColumnSortMode"></see> that specifies the criteria used 
            to order the rows based on the cell values in a column.</returns>
            <exception cref="T:System.InvalidOperationException">The value assigned to the property 
            conflicts with SelectionMode. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewDateTimeColumn.DefaultCellStyle">
            <summary>Gets or sets the column's default cell style.</summary>
            <returns>A <see cref="T:Habanero.Faces.Base.IDataGridViewCellStyle"></see> that represents the default style of the cells in the column.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Habanero.Faces.Win.CalendarCell">
            <summary>
            Represents a cell that holds a calendar date
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarCell.#ctor">
            <summary>
            Constructor to initialise a new cell, using the short date format
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Initialises the editing control
            </summary>
            <param name="rowIndex">The row index number</param>
            <param name="initialFormattedValue">The initial value</param>
            <param name="dataGridViewCellStyle">The cell style</param>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarCell.EditType">
            <summary>
            Gets the type of editing control that is used
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarCell.ValueType">
            <summary>
            Gets the type of value contained in the cell
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarCell.DefaultNewRowValue">
            <summary>
            Gets the default value for a new row, which in this case is
            the current date and time
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CalendarEditingControl">
            <summary>
            A control for editing date and time values
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.#ctor">
            <summary>
            Constructor to initialise a new editing control with the short
            date format
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the value being held in the control
            </summary>
            <returns>Returns the value being held</returns>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Copy the styles from the object provided across to this editing
            control
            </summary>
            <param name="dataGridViewCellStyle">The source to copy from</param>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Indicates if the editing control wants the input key specified
            </summary>
            <param name="key">The key in question</param>
            <param name="dataGridViewWantsInputKey">Whether the DataGridView
            wants the input key</param>
            <returns>Returns true if so, false if not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Prepares the editing control for editing
            </summary>
            <param name="selectAll">Whether to select all the content first,
            which can make it easier to replace as you type</param>
        </member>
        <member name="M:Habanero.Faces.Win.CalendarEditingControl.OnValueChanged(System.EventArgs)">
            <summary>
            A handler to carry out repercussions of a changed value
            </summary>
            <param name="eventargs">Arguments relating to the event</param>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.EditingControlFormattedValue">
            <summary>
            Gets and sets the value being held in the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.EditingControlRowIndex">
            <summary>
            Gets and sets the row index number
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Gets the value that indicates whether the control should be repositioned when there
            is a value change
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.EditingControlDataGridView">
            <summary>
            Gets and sets the DataGridView object referenced in this
            control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.EditingControlValueChanged">
            <summary>
            Gets and sets the boolean which indicates whether the value
            held in the control has changed
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CalendarEditingControl.EditingPanelCursor">
            <summary>
            Gets the Cursor object from the editing panel
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DateTimePickerUtilWinTemp">
            <summary>
            Gets and sets date-time values in any given date-time picker
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.GetValue(System.Windows.Forms.Control)">
            <summary>
            Gets a date-time value from the provided picker
            </summary>
            <param name="dateTimePicker">A date-time picker</param>
            <returns>Returns the DateTime value or null if none was chosen</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetValue(System.Windows.Forms.Control,System.DateTime)">
            <summary>
            Sets the date-time value in the specified date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="date">The date to set to</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetValue(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the date-time value in the specified date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="dateString">The date value as a string</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetValue(System.Windows.Forms.Control,System.Object)">
            <summary>
            Sets the date-time value in the specified date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="dateValue">The date value as either a string or as
            a DateTime object</param>
            <exception cref="T:System.ArgumentException">Thrown if the date value is neither
            a string nor a DateTime object</exception>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetCustomFormat(System.Windows.Forms.Control,System.String)">
            <summary>
            Specify the custom format for the given date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="customFormat">The custom format to set for the date-time picker</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetTimeFormat(System.Windows.Forms.Control)">
            <summary>
            Specify the time format in the given date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.SetShowUpDown(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Specify the time format in the given date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="showUpDown">Specifies if the Up/Down control must be shown or not</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.AddValueChangedHandler(System.Windows.Forms.Control,System.EventHandler)">
            <summary>
             Adds a ValueChanged handler for the date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="eventHandler">The Handler to add</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateTimePickerUtilWinTemp.RemoveValueChangedHandler(System.Windows.Forms.Control,System.EventHandler)">
            <summary>
             Removes a ValueChanged handler for the date-time picker
            </summary>
            <param name="dateTimePicker">The date-time picker</param>
            <param name="eventHandler">The Handler to remove</param>
        </member>
        <member name="T:Habanero.Faces.Win.TextBoxWin">
            <summary>
            Represents a TextBox control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxWin.Habanero#Faces#Base#ITextBox#ScrollBars">
            <summary>
            Gets or sets which scroll bars should appear in a multiline TextBox control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TextBoxWin.Habanero#Faces#Base#ITextBox#TextAlign">
            <summary>
            Gets or sets the alignment of text in the TextBox control
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.TabControlWin">
            <summary>
            Manages a related set of tab pages
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TabControlWin.AddControl(Habanero.Faces.Base.IControlHabanero,System.String,System.Int32,System.Int32)">
            <summary>
            Adds an <see cref="T:Habanero.Faces.Base.IControlHabanero"/> to this control. The <paramref name="contentControl"/> is
               wrapped in the appropriate Child Control Type.
            </summary>
            <param name="contentControl">The control that is being placed as a child within this control. The content control could be 
             a Panel of <see cref="T:Habanero.Base.IBusinessObject"/>.<see cref="T:Habanero.Base.IBOProp"/>s or any other child control</param>
            <param name="headingText">The heading text that will be shown as the Header for this Group e.g. For a <see cref="T:Habanero.Faces.Base.ITabControl"/>
              this will be the Text shown in the Tab for a <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/> this will be the text shown
              on the Collapse Panel and for an <see cref="T:Habanero.Faces.Base.IGroupBox"/> this will be the title of the Group Box.</param>
            <param name="minimumControlHeight">The minimum height that the <paramref name="contentControl"/> can be.
              This height along with any other spacing required will be used as the minimum height for the ChildControlCreated
            </param>
            <param name="minimumControlWidth">The minimum width that the contentControl can be</param>
            <returns></returns>
        </member>
        <member name="P:Habanero.Faces.Win.TabControlWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.TabControlWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabControlWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabControlWin.TabPages">
            <summary>
            Gets the collection of tab pages in this tab control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabControlWin.SelectedTab">
            <summary>
            Gets or sets the currently selected tab page
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.TabPageCollectionWin">
            <summary>
            Contains the collection of controls that the TabPage uses
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TabPageCollectionWin.Add(Habanero.Faces.Base.ITabPage)">
            <summary>
            Adds a tab page to the collection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.TabPageCollectionWin.IndexOf(Habanero.Faces.Base.ITabPage)">
            <summary>
            Retrieves the index of the specified tab page in the collection
            </summary>
            <returns>A zero-based index value that represents the position of the specified
            tab page in the collection</returns>
        </member>
        <member name="P:Habanero.Faces.Win.TabPageCollectionWin.Item(System.Int32)">
            <summary>
            Indicates the tab page at the specified indexed location in the collection
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.TabPageCollectionWin.Count">
            <summary>
            Indicates the number of tab pages in the collection
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.RadioButtonWin">
            <summary>
            Enables the user to select a single option from a group of choices
            when paired with other RadioButton controls
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.RadioButtonWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.RadioButtonWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.RadioButtonWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ComboBoxKeyPressMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a lookup ComboBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxKeyPressMapperStrategyWin.RemoveCurrentHandlers(Habanero.Faces.Base.IComboBoxMapper)">
            <summary>
            Removes event handlers previously assigned to the ComboBox
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="M:Habanero.Faces.Win.ComboBoxKeyPressMapperStrategyWin.AddHandlers(Habanero.Faces.Base.IComboBoxMapper)">
            <summary>
            Adds event handlers to the ComboBox that are suitable for the UI environment
            </summary>
            <param name="mapper">The mapper for the lookup ComboBox</param>
        </member>
        <member name="T:Habanero.Faces.Win.EditableGridControlWin">
            <summary>
            Provides a combination of editable grid, filter and buttons used to edit a
            collection of business objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.#ctor">
            <summary>
             Constructs a new instance of a <see cref="T:Habanero.Faces.Win.EditableGridControlWin"/>.
             This uses the <see cref="T:Habanero.Faces.Base.IControlFactory"/> from the <see cref="T:Habanero.Faces.Base.GlobalUIRegistry"/> to construct the control.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs a new instance of a <see cref="T:Habanero.Faces.Win.EditableGridControlWin"/>.
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use to construct the control.</param>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.Initialise(Habanero.Base.IClassDef)">
            <summary>
            Initiliases the grid structure using the default UI class definition (implicitly named "default")
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.Initialise(Habanero.Base.IClassDef,System.String)">
            <summary>
            Initialises the grid structure using the specified UI class definition
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
            <param name="uiDefName">The UI definition with the given name</param>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.Initialise(Habanero.Base.IClassDef,Habanero.BO.ClassDefinition.IUIGrid,System.String)">
            <summary>
            Initialises the grid structure using the given UI class definition
            </summary>
            <param name="classDef">The class definition of the business objects shown in the grid</param>
            <param name="gridDef">The grid definition to use</param>
            <param name="uiDefName">The name of the grid definition.</param>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.SetBusinessObjectCollection(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Sets the business object collection to display.  Loading of
            the collection needs to be done before it is assigned to the
            grid.  This method assumes a default UI definition is to be
            used, that is a 'ui' element without a 'name' attribute.
            </summary>
            <param name="boCollection">The new business object collection
            to be shown in the grid</param>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.GetBusinessObjectCollection">
            <summary>
             Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.Faces.Base.IGridControl"/>.
            </summary>
            <returns>Returns the <see cref="T:Habanero.Base.IBusinessObjectCollection"/> that has been set for this <see cref="T:Habanero.Faces.Base.IGridControl"/>.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.EditableGridControlWin.RefreshFilter">
            <summary>
             Refresh the Filter.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.UiDefName">
            <summary>
            Gets and sets the UI definition used to initialise the grid structure (the UI name is indicated
            by the "name" attribute on the UI element in the class definitions
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.ClassDef">
            <summary>
            Gets and sets the class definition used to initialise the grid structure
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.Grid">
            <summary>
            Returns the grid object held. This property can be used to
            access a range of functionality for the grid
            (eg. myGridWithButtons.Grid.AddBusinessObject(...)).
            </summary>    
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.Habanero#Faces#Base#IGridControl#Grid">
            <summary>
            Returns the editable grid object held. This property can be used to
            access a range of functionality for the grid
            (eg. myGridWithButtons.Grid.AddBusinessObject(...)).
            </summary>    
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.Habanero#Faces#Base#IGridControl#Buttons">
            <summary>
            Gets the button control, which contains a set of default buttons for
            editing the objects and can be customised
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.IsInitialised">
            <summary>
             Returns a Flag indicating whether this control has been initialised yet or not.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.BusinessObjectCollection">
            <summary>
            Gets and Sets the business object collection displayed in the grid.  This
            collection must be pre-loaded using the collection's Load() command or from the
            <see cref="T:Habanero.BO.IBusinessObjectLoader"/>.<br/>
            If the grid has not been <see cref="M:Habanero.Faces.Base.IGridControl.Initialise(Habanero.Base.IClassDef,System.String)"/>d.
            The default UI definition will be used for the class def defined by the business object collection.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.EditableGridControlWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.Buttons">
            <summary>
            Gets the buttons control used to save and cancel changes
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.FilterControl">
            <summary>
            Gets the filter control used to filter which rows are shown in the grid
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.FilterMode">
            <summary>
            Gets and sets the filter modes for the grid (i.e. filter or search). See <see cref="T:Habanero.Base.FilterModes"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.OrderBy">
            <summary>
            Gets and sets the default order by clause used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.AdditionalSearchCriteria">
            <summary>
            Gets and sets the standard search criteria used for loading the grid when the <see cref="T:Habanero.Base.FilterModes"/>
            is set to Search. This search criteria will be appended with an AND to any search criteria returned
            by the FilterControl.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.AllowUsersToAddBO">
            <summary>
             Gets and sets whether the user can add Business objects via this control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.AllowUsersToDeleteBO">
            <summary>
            Gets and sets whether the user can Delete (<see cref="M:Habanero.Base.IBusinessObject.MarkForDelete"/>) <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.AllowUsersToEditBO">
            <summary>
            Gets and sets whether the user can edit <see cref="T:Habanero.Base.IBusinessObject"/>s via this control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.ConfirmDeletion">
            <summary>
            Gets or sets a boolean value that determines whether to confirm
            deletion with the user when they have chosen to delete a row
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.EditableGridControlWin.CheckUserConfirmsDeletionDelegate">
            <summary>
            Gets or sets the delegate that checks whether the user wants to delete selected rows.
            If <see cref="P:Habanero.Faces.Base.IBOSelectorAndEditor.ConfirmDeletion"/> is true and no specific <see cref="P:Habanero.Faces.Base.IBOSelectorAndEditor.CheckUserConfirmsDeletionDelegate"/> is set then
            a default <see cref="T:Habanero.Faces.Base.CheckUserConfirmsDeletion"/> is used.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.BOColTabControlWin">
            <summary>
            Displays a business object collection in a tab control, with one
            business object per tab.  Each tab holds a business control, provided
            by the developer, that refreshes to display the business object for
            the current tab.
            <br/>
            This control is suitable for a business object collection with a limited
            number of objects.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOColTabControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructor to initialise a new tab control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOColTabControlWin.GetBo(Habanero.Faces.Base.ITabPage)">
            <summary>
            Returns the business object represented in the specified tab page
            </summary>
            <param name="tabPage">The tab page</param>
            <returns>Returns the business object, or null if not available
            </returns>
        </member>
        <member name="M:Habanero.Faces.Win.BOColTabControlWin.GetTabPage(Habanero.Base.IBusinessObject)">
            <summary>
            Returns the TabPage object that is representing the given
            business object
            </summary>
            <param name="bo">The business object being represented</param>
            <returns>Returns the TabPage object, or null if not found</returns>
        </member>
        <member name="M:Habanero.Faces.Win.BOColTabControlWin.Clear">
            <summary>
            Clears the business object collection and the rows in the data table
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.BOColTabControlWin.GetBusinessObjectAtRow(System.Int32)">
            <summary>
            Returns the business object at the specified row number
            </summary>
            <param name="row">The row number in question</param>
            <returns>Returns the busines object at that row, or null
            if none is found</returns>
        </member>
        <member name="E:Habanero.Faces.Win.BOColTabControlWin.TabPageAdded">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.BOColTabControlWin.TabPageRemoved">
            <summary>
            Occurs when the collection in the grid is changed
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.BusinessObjectControl">
            <summary>
            Sets the boControl that will be displayed on each tab page.  This must be called
            before the BoTabColControl can be used. The business object control that is
            displaying the business object information in the tab page
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.BusinessObjectCollection">
            <summary>
            Sets the collection of tab pages for the collection of business
            objects provided
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.TabControl">
            <summary>
            Returns the TabControl object
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.CurrentBusinessObject">
            <summary>
            Returns the business object represented in the currently
            selected tab page
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.BusinessObjectControlCreator">
            <summary>
            Gets and Sets the Business Object Control Creator. This is a delegate for creating a
             Business Object Control. This can be used as an alternate to setting the control
            on the <see cref="T:Habanero.Faces.Base.IBOColTabControl"/> so that a different instance of the control
             is created for each tab instead of them  using the same control with diff data.
            This has been created for performance reasons.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.BOColTabControlManager">
            <summary>
            Returns the manager that provides logic common to all
            UI environments
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.SelectedBusinessObject">
            <summary>
            Gets and sets the currently selected business object in the grid
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.BOColTabControlWin.BusinessObjectSelected">
            <summary>
            Event Occurs when a business object is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.NoOfItems">
            <summary>Gets the number of items displayed in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</summary>
            <returns>The number of items in the <see cref="T:Habanero.Faces.Base.IBOColSelector"></see>.</returns>
        </member>
        <member name="P:Habanero.Faces.Win.BOColTabControlWin.AutoSelectFirstItem">
            <summary>
            Gets and sets whether this selector autoselects the first item or not when a new collection is set.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CloseBOEditorDialogWin">
            <summary>
            This is a Dialog Box that is specialiased for dealing with the
            Closing of any form or application that is editing Business Objects.
            The dialogue box will display a sensible message to the user to determine
            whether they want to Close the Origional form without saving, Save the BO and then
            Close or Cancel the Closing of the origional form.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CloseBOEditorDialogWin.#ctor(Habanero.Faces.Base.IControlFactory,Habanero.Base.IBusinessObject)">
            <summary>
            Constructor 
            </summary>
            <param name="controlFactory">The control Factory used to construct buttons, labels etc by ths control</param>
            <param name="businessObject">The business Object whose Dirty state is being checked.</param>
        </member>
        <member name="M:Habanero.Faces.Win.CloseBOEditorDialogWin.#ctor(Habanero.Faces.Base.IControlFactory,System.String,System.Boolean,System.Boolean)">
            <summary>
             Construct the Dialog form for any situation e.g. where the Form being closed has 
             Mutliple Business Objects is a wizard etc.
            </summary>
             <param name="controlFactory">The control Factory used to construct buttons, labels etc by ths control</param>
            <param name="fullDisplayName">Full display name for the BusienssObject(s)</param>
            <param name="isInValidState">Are the BusinessObject(s) in a valid state</param>
            <param name="isDirty"></param>
            <exception cref="T:System.ArgumentNullException">control Factory must not be null</exception>
        </member>
        <member name="P:Habanero.Faces.Win.CloseBOEditorDialogWin.CancelCloseBtn">
            <summary>
            The CancelClose Button.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CloseBOEditorDialogWin.SaveAndCloseBtn">
            <summary>
            The Save and Close Button.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CloseBOEditorDialogWin.CloseWithoutSavingBtn">
            <summary>
            The Close without saving Button.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CloseBOEditorDialogWin.BOEditorDialogResult">
            <summary>
            The Result from this Form.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MessageWizardStepWin">
            <summary>
            A basic implementation of WizardStep that can be used for simply displaying a message.  
            Should a step be required that is a simple message for the user (such as at the end of a wizard), this step can be used
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MessageWizardStepWin.#ctor">
            <summary>
            Constructs the MessageWizardStep
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MessageWizardStepWin.SetMessage(System.String)">
            <summary>
            Sets the message to be displayed to the user
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="F:Habanero.Faces.Win.MessageWizardStepWin.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MessageWizardStepWin.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Habanero.Faces.Win.MessageWizardStepWin.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Habanero.Faces.Win.MessageWizardStepWin._uxMessageLabel">
            <summary>
            The label for the message.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ControlFactoryWin">
            <summary>
            Creates controls for the System.Windows.Forms UI environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateFilterControl">
            <summary>
            Creates a filter control with the default layout manager
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTextBox">
            <summary>
            Creates a TextBox control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTreeView(System.String)">
            <summary>
            Creates a new empty TreeView
            </summary>
            <param name="name">The name of the TreeView</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTreeView">
            <summary>
            Creates a new empty TreeView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTreeNode(System.String)">
            <summary>
             Creates a new TreeNode for a TreeView control.
            </summary>
            <param name="nodeName">The name for the node</param>
            <returns>The newly created TreeNode object.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateControl(System.String,System.String)">
            <summary>
            Creates a control for the given type and assembly name
            </summary>
            <param name="typeName">The name of the control type</param>
            <param name="assemblyName">The assembly name of the control type</param>
            <returns>Returns either the control of the specified type or
            the default type, which is usually TextBox.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateControl(System.Type)">
            <summary>
            Creates a new control of the type specified
            </summary>
            <param name="controlType">The control type, which must be a
            sub-type of <see cref="T:Habanero.Faces.Base.IControlHabanero"/></param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDateTimePicker(System.DateTime)">
            <summary>
            Creates a new DateTimePicker with a specified date
            </summary>
            <param name="defaultDate">The initial date value</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDateRangeComboBox">
            <summary>
            Creates a new DateRangeComboBox control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMonthPicker">
            <summary>
            Creates a new DateTimePicker that is formatted to handle months
            and years
            </summary>
            <returns>Returns a new DateTimePicker object</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateNumericUpDown">
            <summary>
             Creates a new numeric up-down control
            </summary>
            <returns>The created NumericUpDown control</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateNumericUpDownInteger">
            <summary>
            Creates a new numeric up-down control that is formatted with
            zero decimal places for integer use
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateNumericUpDownCurrency">
            <summary>
            Creates a new numeric up-down control that is formatted with
            two decimal places for currency use
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateProgressBar">
            <summary>
            Creates a new progress bar
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateSplitter">
            <summary>
            Creates a new splitter which enables the user to resize 
            docked controls
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTabPage(System.String)">
            <summary>
            Creates a new tab page
            </summary>
            <param name="title">The page title to appear in the tab</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateRadioButton(System.String)">
            <summary>
            Creates a new radio button
            </summary>
            <param name="text">The text to appear next to the radio button</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGroupBox">
            <summary>
            Creates a new GroupBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGroupBox(System.String)">
            <summary>
            Creates a new GroupBox with the specified text as the title.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTabControl">
            <summary>
            Creates a TabControl
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTextBoxMultiLine(System.Int32)">
            <summary>
            Creates a multi line textbox, setting the scrollbars to vertical
            </summary>
            <param name="numLines">The number of lines to show in the TextBox</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateWizardControl(Habanero.Faces.Base.IWizardController)">
            <summary>
            Creates a control that can be placed on a form or a panel to implement a wizard user interface.
            The wizard control will have a next and previous button and a panel to place the wizard step on.
            </summary>
            <param name="wizardController">The controller that manages the wizard process</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateWizardForm(Habanero.Faces.Base.IWizardController)">
            <summary>
            Creates a form that will be used to display the wizard user interface.
            </summary>
            <param name="wizardController"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateWizardForm(Habanero.Faces.Base.IWizardControl)">
            <summary>
            Creates a form that will be used to display the wizard user interface.
            </summary>
            <param name="wizardControl">The Wizard control that will be displayed on the form</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String,Habanero.Base.PostObjectEditDelegate)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
            <param name="action">Action to be performed when the editing is completed or cancelled. Typically used if you want to update
            a grid or a list in an asynchronous environment (E.g. to select the recently edited item in the grid)</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String,Habanero.Faces.Base.GroupControlCreator)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
            <param name="groupControlCreator">The Creator that will be used to Create the <see cref="T:Habanero.Faces.Base.IGroupControl"/></param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorForm(Habanero.BO.BusinessObject)">
            <summary>
            Returns a BOEditor form. This is a form that the business object can be edited in  a grid, list etc in an asynchronous environment. E.g. to select the recently edited item in the grid
            </summary>
            <param name="bo"> </param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorForm(Habanero.BO.BusinessObject,System.String)">
            <summary>
            Creates a form in which a business object can be edited
            </summary>
            <param name="bo">The business object to edit</param>
            <param name="uiDefName">The name of the set of UI definitions
            used to design the edit form. Setting this to an empty string
            will use a UI definition with no name attribute specified.</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateEditableGrid">
            <summary>
            Creates an editable grid
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateEditableGridControl">
            <summary>
            Creates an EditableGridControl
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateFileChooser">
            <summary>
            Creates a FileChooser control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOColTabControl">
            <summary>
            Displays a business object collection in a tab control, with one
            business object per tab.  Each tab holds a business control, provided
            by the developer, that refreshes to display the business object for
            the current tab.
            <br/>
            This control is suitable for a business object collection with a limited
            number of objects.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateControlMapperStrategy">
            <summary>
            Creates a control mapper strategy for the management of how
            business object properties and their related controls update each other.
            For example, a windows strategy might be to update the control value whenever the property 
            is updated, whereas an internet strategy might be to update the control value only
            when the business object is loaded.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTextBoxMapperStrategy">
            <summary>
            Returns a textbox mapper strategy that can be applied to a textbox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridView">
            <summary>
             Creates a DataGridView
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewImageColumn">
            <summary>
            Creates a DataGridViewImageColumn
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewTextBoxColumn">
            <summary>
            Creates a DataGridViewTextBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewCheckBoxColumn">
            <summary>
            Creates a DataGridViewCheckBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewComboBoxColumn">
            <summary>
            Creates a DataGridViewComboBoxColumn
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewDateTimeColumn">
            <summary>
            Creates a DataGridViewDateTimeColumn
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewNumericUpDownColumn">
            <summary>
             Creates a DataGridViewNumericUpDownColumn
            </summary>
            <returns>A new DataGridViewNumericUpDownColumn</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewColumn(System.String,System.String)">
            <summary>
            Creates a column for a DataGridView for the given type
            </summary>
            <param name="typeName">The name of the type</param>
            <param name="assemblyName">The name of the assembly</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDataGridViewColumn(System.Type)">
            <summary>
            Creates a column for a DataGridView for the given type
            </summary>
            <param name="columnType">The type of the column</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDateRangeComboBox(System.Collections.Generic.List{Habanero.Base.Util.DateRangeOptions})">
            <summary>
            Creates DateRangeComboBox control with a specific set of date range
            options to display
            </summary>
            <param name="optionsToDisplay">A list of date range options to display</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateErrorProvider">
            <summary>
            Creates an ErrorProvider
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateForm">
            <summary>
            Creates a Form control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCheckBoxMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a CheckBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateListComboBoxMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLookupComboBoxDefaultMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a lookup ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLookupKeyPressMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of key presses on a lookup ComboBox for the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateNumericUpDownMapperStrategy">
            <summary>
            Creates a strategy that customises behaviour of a NumericUpDown for the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateEditableGridButtonsControl">
            <summary>
            Creates an buttons control for an <see cref="T:Habanero.Faces.Base.IEditableGridControl"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateOKCancelDialogFactory">
            <summary>
            Creates an OKCancelDialog
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateStaticDataEditor">
            <summary>
            Creates a static data editor
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.ShowMessageBox(System.String,System.String,Habanero.Faces.Base.MessageBoxButtons,Habanero.Faces.Base.MessageBoxIcon)">
            <summary>
             Displays a message box with specified text, caption, buttons, and icon.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <param name="title">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.ShowMessageBox(System.String,System.String,Habanero.Faces.Base.MessageBoxButtons,Habanero.Faces.Base.MessageBoxIcon,Habanero.Faces.Base.DialogCompletionDelegate)">
            <summary>
             Displays a message box with specified text, caption, buttons, and icon.
             Once the user is has responded, the provided delegate is called with an indication of the <see cref="T:Habanero.Faces.Base.DialogResult"/>.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <param name="title">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="dialogCompletionDelegate">A delegate to be called when the MessageBox has been completed.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.ShowMessageBox(System.String)">
            <summary>
             Displays a message box with specified text.
            </summary>
            <param name="message">The text to display in the message box.</param>
            <returns>The message box result.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateComboBox">
            <summary>
            Creates a new empty ComboBox
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateListBox">
            <summary>
            Creates a ListBox control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMultiSelector``1">
            <summary>
            Creates a multi-selector control
            </summary>
            <typeparam name="T">The business object type being managed in the control</typeparam>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateButton">
            <summary>
            Creates a button control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateButton(System.String)">
            <summary>
            Creates a button control
            </summary>
            <param name="text">The text to appear on the button</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateButton(System.String,System.EventHandler)">
            <summary>
            Creates a button control with an attached event handler to carry out
            further actions if the button is pressed
            </summary>
            <param name="text">The text to appear on the button</param>
            <param name="clickHandler">The method that handles the Click event</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCheckBox">
            <summary>
            Creates a CheckBox control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCheckBox(System.Boolean)">
            <summary>
            Creates a CheckBox control with a specified initial checked state
            </summary>
            <param name="defaultValue">Whether the initial box is checked</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLabel">
            <summary>
            Creates a label without text
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLabel(System.String)">
            <summary>
            Creates a label with specified text
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLabel(System.String,System.Boolean)">
            <summary>
            Creates a label
            </summary>
            <param name="labelText">The text to appear in the label</param>
            <param name="isBold">Whether the text appears in bold font</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDateTimePicker">
            <summary>
            Creates a DateTimePicker
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBorderLayoutManager(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Creates a BorderLayoutManager to place controls on the given parent control
            </summary>
            <param name="control">The parent control on which to managed the layout</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreatePanel">
            <summary>
            Creates a Panel control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateReadOnlyGrid">
            <summary>
            Creates a read-only Grid
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateReadOnlyGridControl">
            <summary>
            Creates a ReadOnlyGridControl
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateButtonGroupControl">
            <summary>
            Creates a control to manage a group of buttons that display next to each other
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateReadOnlyGridButtonsControl">
            <summary>
            Creates a buttons control for a <see cref="T:Habanero.Faces.Base.IReadOnlyGridControl"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridWithPanelControl``1">
            <summary>
            Obsolete
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridWithPanelControl``1(System.String)">
            <summary>
            Obsolete
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridWithPanelControl``1(Habanero.Faces.Base.IBusinessObjectControl)">
            <summary>
            Obsolete
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridWithPanelControl``1(Habanero.Faces.Base.IBusinessObjectControl,System.String)">
            <summary>
            Obsolete
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreatePanel(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Creates a Panel control
            </summary>
            <param name="controlFactory">The factory that this panel will use to create any controls on it</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreatePanel(System.String,Habanero.Faces.Base.IControlFactory)">
            <summary>
            Creates a Panel control
            </summary>
            <param name="name">The name of the panel</param>
            <param name="controlFactory">The factory that this panel will use to create any controls on it</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreatePasswordTextBox">
            <summary>
            Creates a new PasswordTextBox that masks the letters as the user
            types them
            </summary>
            <returns>Returns the new PasswordTextBox object</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateToolTip">
            <summary>
            Creates a ToolTip
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateControl">
            <summary>
            Creates a generic control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateUserControl">
            <summary>
            Creates a user control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateUserControl(System.String)">
            <summary>
            Creates a user control with the specified name.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateTextBox(System.Type)">
            <summary>
            Creates a TextBox that provides filtering of characters depending on the property type.
            </summary>
            <param name="propertyType">Type property being edited.</param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreatePictureBox">
            <summary>
            Creates a TextBox that provides filtering of characters depending on the property type.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateDateTimePickerMapperStrategy">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IDateTimePickerMapperStrategy"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridAndBOEditorControl``1">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridAndBOEditorControl(Habanero.Base.IClassDef)">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGridAndBOEditorControl``1(Habanero.Faces.Base.IBOEditorControl)">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IBOGridAndEditorControl"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCollapsiblePanel">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCollapsiblePanel(System.String)">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.ICollapsiblePanel"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.createTabPage(System.String)">
            <summary>
            Creates a new TabPage
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateButtonCollapsibleStyle">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IButton"/> configured with the collapsible style
            </summary>
            <returns>a <see cref="T:Habanero.Faces.Base.IButton"/> </returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateLabelPinOffStyle">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.ILabel"/> configured with the collapsible style
            </summary>
            <returns>a <see cref="T:Habanero.Faces.Base.ILabel"/> </returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.ConfigurePinOffStyleLabel(Habanero.Faces.Base.ILabel)">
            <summary>
             Configures the <see cref="T:Habanero.Faces.Base.ILabel"/> with the pinoff style
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.ConfigurePinOnStyleLabel(Habanero.Faces.Base.ILabel)">
            <summary>
            </summary>
            <param name="label"></param>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCollapsiblePanelGroupControl">
            <summary>
             Craetes an <see cref="T:Habanero.Faces.Base.ICollapsiblePanelGroupControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateGroupBoxGroupControl">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IGroupBoxGroupControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateComboBoxSelector">
            <summary>
             Creates an <see cref="T:Habanero.Faces.Base.IBOComboBoxSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateListBoxSelector">
            <summary>
             Creates an <see cref="T:Habanero.Faces.Base.IBOListBoxSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateCollapsiblePanelSelector">
            <summary>
             Creates an <see cref="T:Habanero.Faces.Base.IBOCollapsiblePanelSelector"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMainMenu">
            <summary>
            Creates an <see cref="T:Habanero.Faces.Base.IMainMenuHabanero"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMenuItem(System.String)">
            <summary>
            Creates an <see cref="T:Habanero.Faces.Base.IMenuItem"/> with the name.
            </summary>
            <param name="name"></param>
            <returns>returns the Created MenuItem</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMenuItem(Habanero.Faces.Base.HabaneroMenu.Item)">
            <summary>
            Creates an <see cref="T:Habanero.Faces.Base.IMenuItem"/> with the name.
            </summary>
            <param name="item">the HabaneroMenu.Item that the IMenuItem is being created for</param>
            <returns>returns the Created MenuItem</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMainMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
            Creates an <see cref="T:Habanero.Faces.Base.IMainMenuHabanero"/> with associated habaneroMenu.
            </summary>
            <param name="habaneroMenu">the HabaneroMenu that the IMainMenuHabanero is being created for</param>
            <returns>returns the Created IMainMenuHabanero</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateContextMenu">
            <summary>
            Creates a Context menu of <see cref="T:Habanero.Faces.Base.IMainMenuHabanero"/> with associated habaneroMenu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateContextMenu(Habanero.Faces.Base.HabaneroMenu)">
            <summary>
            Creates a Context menu of <see cref="T:Habanero.Faces.Base.IMainMenuHabanero"/> with associated habaneroMenu.
            </summary>
            <param name="habaneroMenu">the HabaneroMenu that the IMainMenuHabanero is being created for</param>
            <returns>returns the Created IMainMenuHabanero</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateSplitContainer">
            <summary>
            Creates an <see cref="T:Habanero.Faces.Base.ISplitContainer"/>
            </summary>
            <returns>returns the created split container</returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorControl``1(System.String)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Base.IBOPanelEditorControl"/> for the Generic Type T.<br/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object (of type T).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uiDefName">The User Interface definition to use when creating the Control</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorControl``1">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Base.IBOPanelEditorControl"/> for the Generic Type T.<br/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object (of type T).<br/>
            The default uiDef is used as the user interface definition for defining which controls are used to view and edit this business object
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorControl(Habanero.Base.IClassDef,System.String)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Base.IBOPanelEditorControl"/> for the type defined by <paramref name="classDef"/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object.<br/>
            </summary>
            <param name="classDef"></param>
            <param name="uiDefName">The uiDef defined in the classDef that is to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateBOEditorControl(Habanero.Base.IClassDef)">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Base.IBOPanelEditorControl"/> for the type defined by <paramref name="classDef"/>
            This is a simple control that is built to allow the user to view and edit a business object.<br/>
            The controls placed on the Panel are defined by the user interface definition defined in the classDef
            for the Business Object.<br/>
            The default uiDef is used as the user interface definition for defining which controls are used to view and edit this business object
            </summary>
            <param name="classDef"></param>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateMainTitleIconControl">
            <summary>
            Creates a <see cref="T:Habanero.Faces.Win.MainTitleIconControlWin"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateExtendedTextBox">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.ControlMappers.IExtendedTextBox"/>. This is essentially
             a disabled Text Box with a Search button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.ControlFactoryWin.CreateExtendedComboBox">
            <summary>
             Creates a <see cref="T:Habanero.Faces.Base.IExtendedComboBox"/>. This is essentially
             a disabled ComboBox with a Search button.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Habanero.Faces.Win.NumericUpDownMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a NumericUpDown
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownMapperStrategyWin.ValueChanged(Habanero.Faces.Base.NumericUpDownMapper)">
            <summary>
            Handles the value changed event suitably for the UI environment
            </summary>
            <param name="mapper">The mapper for the NumericUpDown</param>
        </member>
        <member name="T:Habanero.Faces.Win.DockStyleWin">
            <summary>
             Class that provides utility methods for the System.Windows.Forms.DockStyle class
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DockStyleWin.GetDockStyle(System.Windows.Forms.DockStyle)">
            <summary>
             Gets the Habanero dock style equivalent to the provided System.Windows.Forms dock style
            </summary>
            <param name="dockStyle">A System.Windows.Forms dock style.</param>
            <returns>The equivalent Habanero dock style.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DockStyleWin.GetDockStyle(Habanero.Faces.Base.DockStyle)">
            <summary>
             Gets the System.Windows.Forms dock style equivalent to the provided Habanero dock style
            </summary>
            <param name="dockStyle">A Habanero dock style.</param>
            <returns>The equivalent System.Windows.Forms dock style.</returns>
        </member>
        <member name="T:Habanero.Faces.Win.CheckBoxWin">
            <summary>
            Represents a CheckBox control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CheckBoxWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.CheckBoxWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.CheckBoxWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.CheckBoxStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a CheckBox
            depending on the environment
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.CheckBoxStrategyWin.AddClickEventHandler(Habanero.Faces.Base.CheckBoxMapper)">
            <summary>
            Adds click event handler
            </summary>
            <param name="mapper">The checkbox mapper</param>
        </member>
        <member name="T:Habanero.Faces.Win.DialogUtilities">
            <summary>
            These utilities provide quick methods for retrieving information from a user dialog.
            For example: an open file name or select folder name dialog.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.String@)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="selectedPath">The folder that was selected by the user</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="selectedPath">The folder that was selected by the user</param>
            <param name="currentFolder">The folder to start navigating from</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="selectedPath">The folder that was selected by the user</param>
            <param name="currentFolder">The folder to start navigating from</param>
            <param name="description">The title of the dialog</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.Windows.Forms.IWin32Window,System.String@)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="selectedPath">The folder that was selected by the user</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.Windows.Forms.IWin32Window,System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="selectedPath">The folder that was selected by the user</param>
            <param name="currentFolder">The folder to start navigating from</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.SelectFolderDialog(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a folder
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="selectedPath">The folder that was selected by the user</param>
            <param name="currentFolder">The folder to start navigating from</param>
            <param name="description">The title of the dialog</param>
            <returns>Returns a value representing whether the folder was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.String@)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.String@,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.Windows.Forms.IWin32Window,System.String@)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.Windows.Forms.IWin32Window,System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetOpenFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.String@,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <param name="overwritePrompt">Should the dialog prompt the user when the file will overwrite another file?</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <param name="overwritePrompt">Should the dialog prompt the user when the file will overwrite another file?</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <param name="overwritePrompt">Should the dialog prompt the user when the file will overwrite another file?</param>
            <param name="createPrompt">Should the dialog prompt the user when the file will be created?</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DialogUtilities.GetSaveFileName(System.Windows.Forms.IWin32Window,System.String@,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            This method shows a dialog for the user to choose a file to open
            </summary>
            <param name="owner">The owner window for the dialog</param>
            <param name="fileName">The file that was selected by the user</param>
            <param name="extension">The default file extension</param>
            <param name="extensionDescription">A description of the default file extension</param>
            <param name="defaultFileName">The default file to open</param>
            <param name="title">The title that will be displayed on the dialog</param>
            <param name="overwritePrompt">Should the dialog prompt the user when the file will overwrite another file?</param>
            <param name="initialDirectory">The default directory to open in</param>
            <returns>Returns a value representing whether a file was chosen or not</returns>
        </member>
        <member name="T:Habanero.Faces.Win.MainTitleIconControlWin">
            <summary>
            This control is the Title Control that is is present at the top of the right hand panel
            This control is used to provide context for the Business Object being shown in the Panel.
            </summary>
        </member>
        <member name="F:Habanero.Faces.Win.MainTitleIconControlWin._panel">
            <summary>
            The panel that contains two labels one showing the Icon and one showing the
            Title.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainTitleIconControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructs a <see cref="T:Habanero.Faces.Win.MainTitleIconControlWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainTitleIconControlWin.SetIconImage(System.String)">
            <summary>
            Sets the Image that is shown on the <see cref="P:Habanero.Faces.Win.MainTitleIconControlWin.Icon"/> label.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Habanero.Faces.Win.MainTitleIconControlWin.RemoveIconImage">
            <summary>
            Removes any Image shown on the <see cref="P:Habanero.Faces.Win.MainTitleIconControlWin.Icon"/> Label
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainTitleIconControlWin.SetValidImage">
            <summary>
            Sets the Image to a standard valid image.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MainTitleIconControlWin.SetInvalidImage">
            <summary>
            Sets the Image to a standard invalid image.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MainTitleIconControlWin.Panel">
            <summary>
            Gets the Panel that the Title Lable and Icon Label are added to.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MainTitleIconControlWin.Icon">
            <summary>
            The <see cref="T:Habanero.Faces.Base.ILabel"/> that contains the Icon being displayed.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MainTitleIconControlWin.Title">
            <summary>
            The <see cref="T:Habanero.Faces.Base.ILabel"/> that contains the Title being displayed.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MainTitleIconControlWin.ControlFactory">
            <summary>
            Gets the control factory that is used by this control to create its Icon and Panel
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DateTimePickerMapperStrategyWin">
            <summary>
            Provides a set of behaviour strategies that can be applied to a TextBox
            depending on the environment
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DateRangeComboBoxWin">
            <summary>
            Provides a selection of common date range options which a user
            can select from, modifying a start date and end date depending
            on the selection.  The options to choose from, such as
            "Yesterday", "Last Week" or "This Year", can be modified by
            the developer.  When adding this control, add an event handler
            on the SelectionChangeCommitted event, and obtain the StartDate and
            EndDate properties at this time.
            <br/>
            NOTE: The start and end dates are the two boundaries of a
            potential range.  Whether they should be inclusive or exclusive
            depends on the developer and how they are implemented.  For
            instance, if today is Nov 13, Yesterday would provide a start
            date of Nov 12, 12am and an end date of Nov 13, 12am.
            <br/>
            To add additional menu options that aren't available, simply add the
            new text item to the ComboBox, using Items.Add.  When you pick up the
            SelectionChangeCommitted event, check if the new text string is selected
            in the Text property and use your own calculations instead of 
            fetching the StartDate and EndDate.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.#ctor">
            <summary>
            Constructor to initialise a new ComboBox with a selection of
            date range options that are suited to a timeless system
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.#ctor(System.Collections.Generic.List{Habanero.Base.Util.DateRangeOptions})">
            <summary>
            Constructor to initialiase a new ComboBox with a specific set
            of date range options to display
            </summary>
            <param name="optionsToDisplay">A list of date range options</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.UseAllDateRangeOptions">
            <summary>
            Populates the ComboBox with all available DateOptions, since
            the default constructor only provides a standardised collection
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.SetTopComboBoxItem(System.String)">
            <summary>
            Sets the item in the ComboBox that first appears to the user
            </summary>
            <param name="displayString">The string to display</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.GetDateRangeString(Habanero.Base.Util.DateRangeOptions)">
            <summary>
            Returns the display string for the date range option supplied
            </summary>
            <param name="option">The date range enumeration</param>
            <returns>Returns the string if found, otherwise throws an
            ArgumentException</returns>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.SetDateRangeString(Habanero.Base.Util.DateRangeOptions,System.String)">
            <summary>
            Amends the display string for a given date option
            </summary>
            <param name="option">The date option to amend</param>
            <param name="newDisplayString">The display string to apply</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.RemoveDateOption(Habanero.Base.Util.DateRangeOptions)">
            <summary>
            Removes a date range option from the current list of options available
            </summary>
            <param name="option">The date range option to remove</param>
        </member>
        <member name="M:Habanero.Faces.Win.DateRangeComboBoxWin.AddDateOption(Habanero.Base.Util.DateRangeOptions)">
            <summary>
            Adds a date range option to the current list of options available
            </summary>
            <param name="option">The date range option to add</param>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.UseFixedNowDate">
            <summary>
            Gets and sets whether the date used to calculate date ranges
            should be DateTime.Now or a fixed date that is specified.
            When false, all date ranges are calculated based on DateTime.Now.
            Setting this property to true allows you to use an alternative
            fixed date as your "Now" value, using the FixedNow property.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.FixedNowDate">
            <summary>
            Gets and sets a fixed date used to calculate date ranges, rather
            than DateTime.Now.  The UseFixedNowDate property must be set to
            true, otherwise this property will be ignored.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.OptionsToDisplay">
            <summary>
            Gets and sets the list of options to display.  If you intend
            to edit individual items in the list, either set the entire
            list once you have edited it, or use the Add and Remove methods
            provided by this class, otherwise the ComboBox list will not
            be refreshed.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.IgnoreTime">
            <summary>
            Sets the current date (eg. DateTime.Now or FixedNowDate) in all calculations to 12am.
            Use caution when using this together with a MidnightOffset, in which
            case you may rather want to manually edit the time just before calling
            StartDate and EditDate (use UseFixedNowDate and FixedNowDate).
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.MidnightOffset">
            <summary>
            Gets and sets the amount of time to add or subtract from
            midnight when calculating date ranges.  This option will
            typically be used where a shift operates on a different
            pattern to 12am to 12am (the default).  If, for instance,
            an industry's operational day runs from 6am to 6am, this
            property can be set with a TimeSpan that adds 6 hours.
            Conversely, if the day starts 2 hours earlier, at 10pm the
            previous evening, set the property with a TimeSpan that
            subtracts 2 hours.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.WeekStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            Monday to redefine the first day of the week.  If Sunday
            is the first day of the week for the given application,
            then this property can be set with -1.  If Tuesday is the
            first day then use 1 (1+1=2).
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.MonthStartOffset">
            <summary>
            Gets and sets the number of days to add or subtract from
            the first day of the month in order to adjust which day
            is typically the first of the month.  If the 5th is the typical start
            of a new month for the given application,
            then this property can be set to 4 (1+4=5).
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.YearStartOffset">
            <summary>
            Gets and sets the number of months to add or subtract from
            January to redefine the first month of the year.  For example,
            if March is the first month of the new year for the given application,
            then this property can be set with 2 (1+2=3).
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.StartDate">
            <summary>
            Returns the start date for the currently selected date range option,
            or DateTime.MinValue if no valid option is selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DateRangeComboBoxWin.EndDate">
            <summary>
            Returns the end date for the currently selected date range option,
            or DateTime.MaxValue if no valid option is selected
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.WizardControlWin">
            <summary>
            Provides the controls for a wizard, which guides users through a process one
            step at a time.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.#ctor(Habanero.Faces.Base.IWizardController,Habanero.Faces.Base.IControlFactory)">
            <summary>
            Initialises the WizardControl with the IWizardController.  No logic is performed other than storing the wizard controller.
            </summary>
            <param name="wizardController"></param>
            <param name="controlFactory">The control factory that this control will use to create a button</param>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.CreateButtonPanel">
            <summary>
            Creates all the Previous Next etc Buttons and puts them on a Panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.Next">
            <summary>
            Attempts to go to the next step in the wizard.  If this is disallowed by the wizard controller a MessagePosted event will be fired.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.Previous">
            <summary>
            Attempts to go to the previous step in the wizard.
             </summary>
            <exception cref="T:Habanero.Faces.Base.WizardStepException">If the wizard is on the first step this exception will be thrown.</exception>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.Start">
            <summary>
            Starts the wizard by moving to the first step.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.WizardControlWin.Finish">
            <summary>
            Calls the finish method on the controller to being the completion process.  
            If this is successful the Finished event is fired.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.WizardControlWin.Finished">
            <summary>
            Raised when the wizard is complete to notify the containing control or controlling object.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.WizardControlWin.MessagePosted">
            <summary>
            Raised when a message is communicated so the controlling object can display or log the message.
             uses an <see cref="T:System.Action`1"/> which is merely a predifined delegate that takes one parameter of Type T and
            returns a void.
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.WizardControlWin.StepChanged">
            <summary>
            Raised when the wizard step changes. The new step is passed through as an event argument.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.WizardStepPanel">
            <summary>
            The panel that the controls are physically being placed on.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.CurrentControl">
            <summary>
            Gets the control that is currently displayed in the WizardControl (the current wizard step's control)
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.CancelButton">
            <summary>
            Gets the Cancel Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.FinishButton">
            <summary>
            Gets the Finish Button so that it can be programmatically interacted with if required.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.NextButton">
            <summary>
            Gets the Next Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.PreviousButton">
            <summary>
            Gets the Previous Button so that it can be programmatically interacted with.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.WizardControlWin.WizardController">
            <summary>
            Gets or sets the WizardController.  Upon setting the controller, the Start() method is called to begin the wizard.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ReadOnlyGridWin">
            <summary>
            Provides a grid on which a business object collection can be
            listed but not edited.  If you would like more functionality,
            including the ability to add, edit and delete the objects, use
            <see cref="T:Habanero.Faces.Base.IReadOnlyGridControl"/> instead.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridWin.#ctor">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.ReadOnlyGridWin"/>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridWin.CreateDataSetProvider(Habanero.Base.IBusinessObjectCollection)">
            <summary>
            Creates a dataset provider that is applicable to this grid. For example, a readonly grid would
            return a <see cref="T:Habanero.BO.ReadOnlyDataSetProvider"/>, while an editable grid would return an editable one.
            </summary>
            <param name="col">The collection to create the datasetprovider for</param>
            <returns>Returns the data set provider</returns>
        </member>
        <member name="T:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin">
            <summary>
            Provides a set of buttons for use on an <see cref="T:Habanero.Faces.Base.IReadOnlyGridControl"/>.
            By default, Add and Edit buttons are available, but you can also make the standard
            Delete button visible by setting the <see cref="P:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.ShowDefaultDeleteButton"/>
            property to true.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs the <see cref="T:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="E:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.DeleteClicked">
            <summary>
            Fires when the Delete button is clicked
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.AddClicked">
            <summary>
            Fires when the Add button is clicked
            </summary>
        </member>
        <member name="E:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.EditClicked">
            <summary>
            Fires when the Edit button is clicked
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.ReadOnlyGridButtonsControlWin.ShowDefaultDeleteButton">
            <summary>
            Indicates whether the default delete button is visible.  This
            is false by default.
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.MultiSelectorWin`1">
            <summary>
            Provides a multiselector control. The type to be displayed in the 
            lists is set by the template type.  The multiselector helps the user to
            select from an available list of options.  Unselected options appear on the
            left and selected ones appear on the right.  The AvailableOptions consists
            of all options, both selected and unselected - no object may appear in the
            selected list if it is not also in the AvailableOptions list.  All list
            control is managed through the Model object.
            </summary>
        </member>
        <member name="F:Habanero.Faces.Win.MultiSelectorWin`1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MultiSelectorWin`1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Habanero.Faces.Win.MultiSelectorWin`1.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.MultiSelectorWin`1.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructs a multiselector
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.MultiSelectorWin`1.GetButton(Habanero.Faces.Base.MultiSelectorButton)">
            <summary>
            Gets the button control as indicated by the <see cref="T:Habanero.Faces.Base.MultiSelectorButton"/> enumeration.
            </summary>
            <param name="buttonType">The type of button</param>
            <returns>Returns a button</returns>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.ControlFactory">
            <summary>
             Returns the control factory used for creating the controls on this multiselector.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.AllOptions">
            <summary>
            Gets and sets the complete list of options available to go in
            either panel
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.AvailableOptionsListBox">
            <summary>
            Gets the ListBox control that contains the available options that
            have not been selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.AvailableOptionsGroupBox">
            <summary>
            Gets the <see cref="T:Habanero.Faces.Base.IGroupBox"/> that contains the <see cref="P:Habanero.Faces.Win.MultiSelectorWin`1.AvailableOptionsListBox"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.Model">
            <summary>
            Gets the model that manages the options available or selected
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.SelectedOptions">
            <summary>
             Gets or sets the list of items already selected (which is a subset of
             all available options).  This list typically appears on the right-hand side.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.SelectedOptionsListBox">
            <summary>
            Gets the ListBox control that contains the options that have been
            selected from those available
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.SelectedOptionsGroupBox">
            <summary>
            Gets the <see cref="T:Habanero.Faces.Base.IGroupBox"/> that contains the <see cref="P:Habanero.Faces.Win.MultiSelectorWin`1.SelectedOptionsListBox"/>.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.MultiSelectorWin`1.SelectionsView">
            <summary>
            Gets a view of the SelectedOptions collection
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.ControlsHelper">
            <summary>
             Provides useful utilities for windows controls.
             E.g. 
             <li> <see cref="M:Habanero.Faces.Win.ControlsHelper.SafeGui(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)"/></li>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ControlsHelper.SafeGui(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
             Executes the provided delegate in the specified control's thread.
             Use this method to avoid problems with cross thread calls.
            </summary>
            <param name="control">The control running on the thread to be used.</param>
            <param name="invoker">The delegate to execute on the control's thread.</param>
        </member>
        <member name="T:Habanero.Faces.Win.ToolTipWin">
            <summary>
            Represents a small rectangular pop-up window that displays a brief
            description of a control's purpose when the user rests the pointer on the control
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ToolTipWin.SetToolTip(Habanero.Faces.Base.IControlHabanero,System.String)">
            <summary>
            Associates ToolTip text with the specified control
            </summary>
            <param name="controlHabanero">The Control to associate the ToolTip text with</param>
            <param name="toolTipText">The ToolTip text to display when the pointer is on the control</param>
        </member>
        <member name="M:Habanero.Faces.Win.ToolTipWin.GetToolTip(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Retrieves the ToolTip text associated with the specified control
            </summary>
            <param name="controlHabanero">The Control for which to retrieve the ToolTip text</param>
        </member>
        <member name="T:Habanero.Faces.Win.SplitContainerWin">
            <summary>
            Represents a button control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.SplitContainerWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.SplitContainerWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.SplitContainerWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.HabaneroAppWin">
            <summary>
            Provides a template for a standard Habanero application, including
            standard fields and initialisations.  Specific details covered are:
            <ul>
            <li>The class definitions that define how the data is represented
            and limited</li>
            <li>The database configuration, connection and settings</li>
            <li>A logger to record debugging and error messages</li>
            <li>An exception notifier to communicate exceptions to the user</li>
            <li>Automatic version upgrades when an application is out-of-date</li>
            <li>A synchronisation controller</li>
            <li>A control factory to create controls</li>
            <li>A data accessor that specifies what type of data source is used (DB by default)</li>
            </ul>
            To set up and launch an application:
            <ol>
            <li>Instantiate the application with the constructor</li>
            <li>Specify any individual settings as required</li>
            <li>Call the Startup() method to launch the application</li>
            </ol>
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.HabaneroAppWin.#ctor(System.String,System.String)">
            <summary>
            Constructor to initialise a new application with basic application
            information.  Use the Startup() method to launch the application.
            </summary>
            <param name="appName">The application name</param>
            <param name="appVersion">The application version</param>
        </member>
        <member name="M:Habanero.Faces.Win.HabaneroAppWin.SetupControlFactory">
            <summary>
            Sets the control factory used to create controls
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.HabaneroAppWin.SetupSettings">
            <summary>
            Initialises the settings.  If not provided, DatabaseSettings
            is assumed.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.HabaneroAppWin.SetupDatabaseConnection">
            <summary>
            Sets up the database connection.  If not provided, then
            reads the connection from the config file.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.HabaneroAppWin.SetupExceptionNotifier">
            <summary>
            Sets up the exception notifier used to display
            exceptions to the final user.  If not specified,
            assumes the FormExceptionNotifier.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.HabaneroAppWin.DatabaseConfig">
            <summary>
            Sets the database configuration object, which contains basic 
            connection information along with the database vendor name 
            (eg. MySql, Oracle).
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewComboBoxColumnWin">
            <summary>
            Represents a column of DataGridViewComboBoxCell objects
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewComboBoxColumnWin.#ctor(System.Windows.Forms.DataGridViewComboBoxColumn)">
            <summary>
             Constructor for <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell"/>
            </summary>
            <param name="dataGridViewComboBoxColumn"></param>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewComboBoxColumnWin.DataSource">
            <summary>
            Gets or sets the data source that populates the selections for the combo boxes
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewComboBoxColumnWin.ValueMember">
            <summary>
            Gets or sets a string that specifies the property or column from
            which to get values that correspond to the selections in the drop-down list.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewComboBoxColumnWin.DisplayMember">
            <summary>
            Gets or sets a string that specifies the property or column from which to
             retrieve strings for display in the combo boxes.
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewComboBoxColumnWin.Items">
            <summary>Gets the collection of objects used as selections in the combo boxes.</summary>
            <returns>An <see cref="T:System.Collections.IList"></see> that represents the selections in the combo boxes. </returns>
        </member>
        <member name="T:Habanero.Faces.Win.ButtonSizePolicyWin">
            <summary>
            An implementation of <see cref="T:Habanero.Faces.Base.IButtonSizePolicy"/> that will size all the buttons equally based on the widest one.  It also maintains a minimum
            button size equal to the screen resolution / 20.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonSizePolicyWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
            Constructor
            </summary>
            <param name="controlFactory">The <see cref="T:Habanero.Faces.Base.IControlFactory"/> to use.</param>
        </member>
        <member name="M:Habanero.Faces.Win.ButtonSizePolicyWin.RecalcButtonSizes(Habanero.Faces.Base.IControlCollection)">
            <summary>
            Recalculates the button sizes of the given collection of buttons.
            </summary>
            <param name="buttonCollection"></param>
        </member>
        <member name="T:Habanero.Faces.Win.OKCancelDialogFactoryWin">
            <summary>
            Creates OK/Cancel dialogs which contain OK and Cancel buttons, as well
            as control placed above the buttons, which the developer must provide.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.OKCancelDialogFactoryWin.#ctor(Habanero.Faces.Base.IControlFactory)">
            <summary>
             Constructor for <see cref="T:Habanero.Faces.Win.OKCancelDialogFactoryWin"/>
            </summary>
            <param name="controlFactory"></param>
        </member>
        <member name="M:Habanero.Faces.Win.OKCancelDialogFactoryWin.CreateOKCancelPanel(Habanero.Faces.Base.IControlHabanero)">
            <summary>
            Creates a panel containing OK and Cancel buttons
            </summary>
            <param name="nestedControl">The control to place above the buttons</param>
            <returns>Returns the created panel</returns>
        </member>
        <member name="M:Habanero.Faces.Win.OKCancelDialogFactoryWin.CreateOKCancelForm(Habanero.Faces.Base.IControlHabanero,System.String)">
            <summary>
            Creates a form containing OK and Cancel buttons
            </summary>
            <param name="nestedControl">The control to place above the buttons</param>
            <param name="formTitle">The title shown on the form</param>
            <returns>Returns the created form</returns>
        </member>
        <member name="M:Habanero.Faces.Win.OKCancelDialogFactoryWin.CancelButton_ClickHandler(Habanero.Faces.Base.IFormHabanero)">
            <summary>
             Handles the event of the Cancel Button being clicked.
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Habanero.Faces.Win.OKCancelDialogFactoryWin.OkButton_ClickHandler(Habanero.Faces.Base.IFormHabanero)">
            <summary>
             Handles the event of the OKButton Being Clicked.
            </summary>
            <param name="form"></param>
        </member>
        <member name="T:Habanero.Faces.Win.OKCancelDialogFactoryWin.OKCancelPanelWin">
            <summary>
            Represents a panel that contains an OK and Cancel button
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.OKCancelDialogFactoryWin.OKCancelPanelWin.OKButton">
            <summary>
            Gets the OK button
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.OKCancelDialogFactoryWin.OKCancelPanelWin.CancelButton">
            <summary>
            Gets the Cancel button
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.OKCancelDialogFactoryWin.OKCancelPanelWin.ButtonGroupControl">
            <summary>
            Gets the button group control containing the buttons
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.LabelWin">
            <summary>
            Represents a label
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.LabelWin.Habanero#Faces#Base#IControlHabanero#Controls">
            <summary>
            Gets the collection of controls contained within the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.LabelWin.Habanero#Faces#Base#IControlHabanero#Anchor">
            <summary>
            Gets or sets the anchoring style.
            </summary>
            <value></value>
        </member>
        <member name="P:Habanero.Faces.Win.LabelWin.Habanero#Faces#Base#IControlHabanero#Dock">
            <summary>
            Gets or sets which control borders are docked to its parent
            control and determines how a control is resized with its parent
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewNumericUpDownColumnWin">
            <summary>
            Hosts a collection of cells that support a NumericUpDown
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewNumericUpDownColumnWin.#ctor(Habanero.Faces.Win.DataGridViewNumericUpDownColumn)">
            <summary>
             Initialises the DataGridView NumericUpDown Column with the windows implementation
             of the DataGridViewNumericUpDownColumn to wrap for this implementation.
            </summary>
            <param name="dataGridViewColumn">The DataGridViewNumericUpDownColumn to wrap</param>
        </member>
        <member name="T:Habanero.Faces.Win.DataGridViewNumericUpDownColumn">
            <summary>
            Represents a numeric column in data grid view
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.DataGridViewNumericUpDownColumn.#ctor">
            <summary>
            Constructor to initialise a new column
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.DataGridViewNumericUpDownColumn.CellTemplate">
            <summary>
            Gets and sets the cell template
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.NumericUpDownCell">
            <summary>
            Manages a cell that holds a numeric value
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownCell.#ctor">
            <summary>
            Constructor to initialise a new cell
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Initialises the editing control
            </summary>
            <param name="rowIndex">The row index number</param>
            <param name="initialFormattedValue">The initial value</param>
            <param name="dataGridViewCellStyle">The cell style</param>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownCell.EditType">
            <summary>
            Returns the type of editing control that is used
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownCell.ValueType">
            <summary>
            Returns the type of value contained in the cell
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownCell.DefaultNewRowValue">
            <summary>
            Returns the default value for a new row, which in this case is zero
            </summary>
        </member>
        <member name="T:Habanero.Faces.Win.NumericUpDownEditingControl">
            <summary>
            A control for editing numeric values
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.#ctor">
            <summary>
            Constructor to initialise a new editing control with the 
            default numeric format of 2 decimal places.
            </summary>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the value being held in the editing control
            </summary>
            <returns>Returns the current editing control value.</returns>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Copy the styles from the object provided across to this editing
            control
            </summary>
            <param name="dataGridViewCellStyle">The source to copy from</param>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Indicates if the editing control wants the input key specified
            </summary>
            <param name="key">The key in question</param>
            <param name="dataGridViewWantsInputKey">Whether the DataGridView
            wants the input key</param>
            <returns>Returns true if so, false if not</returns>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Prepares the editing control for editing
            </summary>
            <param name="selectAll">Whether to select all the content first,
            which can make it easier to replace as you type</param>
        </member>
        <member name="M:Habanero.Faces.Win.NumericUpDownEditingControl.OnValueChanged(System.EventArgs)">
            <summary>
            A handler to carry out repercussions of a changed value
            </summary>
            <param name="eventargs">Arguments relating to the event</param>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.EditingControlFormattedValue">
            <summary>
            Gets and sets the value being held in the control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.EditingControlRowIndex">
            <summary>
            Gets and sets the row index number
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Indicates whether the control should be repositioned when there
            is a value change
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.EditingControlDataGridView">
            <summary>
            Gets and sets the DataGridView object referenced in this
            control
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.EditingControlValueChanged">
            <summary>
            Gets and sets the boolean which indicates whether the value
            held in the control has changed
            </summary>
        </member>
        <member name="P:Habanero.Faces.Win.NumericUpDownEditingControl.EditingPanelCursor">
            <summary>
            Returns the Cursor object from the editing panel
            </summary>
        </member>
    </members>
</doc>
